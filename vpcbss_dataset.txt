{
    "https://github.com/c2mon/c2mon.git": {
        "sha": "d80687b119c713dd177a58cf53a997d8cc5ca264",
        "c2mon-server/c2mon-server-elasticsearch": {
            "methods": {
                "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.addDataTag",
                "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.removeDataTag",
                "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.updateDataTag",
                "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.reindexTagConfigDocuments",
                "cern.c2mon.server.elasticsearch.tag.TagDocumentIndexerTests.indexTags",
            },
            "polluters": {
                "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.reindexTagConfigDocuments": {
                    "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.addDataTag"
                }
            },
            "cleaners": {
                "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.reindexTagConfigDocuments": {
                    "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.addDataTag": {
                        "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.updateDataTag",
                        "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.removeDataTag",
                        "cern.c2mon.server.elasticsearch.tag.TagDocumentIndexerTests.indexTags",
                    }
                }
            },
            "victims": {
                "cern.c2mon.server.elasticsearch.tag.config.TagConfigDocumentIndexerTests.reindexTagConfigDocuments"
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/alibaba/fastjson.git": {
        "sha": "5c6d6fd471ea1fab59f0df2dd31e0b936806780d",
        "NA": {
            "methods": {
                "com.alibaba.json.bvt.serializer.date.DateTest.test_9",
                "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date_3",
                "com.alibaba.json.bvt.serializer.date.DateTest4_indian.test_date",
                "com.alibaba.json.bvt.serializer.enum_.EnumTest2.test_enum_noasm",
                "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_null",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_3",
                "com.alibaba.json.bvt.parser.deser.date.DateParseTest8.test_date",
                "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_null_asm",
                "com.alibaba.json.bvt.parser.deser.date.DateParseTest7.test_date",
                "com.alibaba.json.bvt.serializer.date.DateTest.test_1",
                "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date",
                "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_array",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_3",
                "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue4",
                "com.alibaba.json.bvt.parser.DefaultExtJSONParser_parseArray.test_8",
                "com.alibaba.json.bvt.bug.Issue978.test_for_issue",
                "com.alibaba.json.bvt.date.DateFieldTest10.test_4",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_1",
                "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_dateFormat",
                "com.alibaba.json.bvt.issue_1700.Issue1769.test_for_issue",
                "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date_private.test_date",
                "com.alibaba.json.bvt.date.DateFieldFormatTest.test_format_",
                "com.alibaba.json.bvt.parser.deser.TimeDeserializerTest.test_time",
                "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date_private.test_date2",
                "com.alibaba.json.bvt.date.DateFieldTest11_reader.test_cn",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_3",
                "com.alibaba.json.bvt.date.DateFieldTest11_reader.test_cn_1",
                "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_null_asm",
                "com.alibaba.json.bvt.bug.Bug_for_80108116.test_for_dateFormat",
                "com.alibaba.json.bvt.issue_1900.Issue1901.test_for_issue_1",
                "com.alibaba.json.bvt.serializer.date.DateTest.test_6",
                "com.alibaba.json.bvt.date.DateFieldTest7.test_0",
                "com.alibaba.json.bvt.issue_2000.Issue2088.test_for_issue",
                "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_null_1",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_cn",
                "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_asm",
                "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue2",
                "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_0",
                "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_format",
                "com.alibaba.json.bvt.parser.deser.date.DateTest.test_reader",
                "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date2_reader",
                "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_null_no_asm",
                "com.alibaba.json.bvt.parser.deser.date.DateParseTest1.test_date",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_1",
                "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date_2",
                "com.alibaba.json.bvt.issue_1900.Issue1901.test_for_issue",
                "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_iso_format",
                "com.alibaba.json.bvt.bug.Bug_for_lenolix_7.test_for_objectKey",
                "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date_private.test_date_null",
                "com.alibaba.json.bvt.bug.Bug_for_issue_316.test_for_issue",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_7",
                "com.alibaba.json.bvt.serializer.date.DateTest5_iso8601.test_date",
                "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_toJavaObject",
                "com.alibaba.json.bvt.date.DateFieldTest8.test_0",
                "com.alibaba.json.bvt.bug.Bug_for_lenolix_8.test_for_objectKey",
                "com.alibaba.json.bvt.parser.deser.date.DateParseTest4.test_date",
                "com.alibaba.json.bvt.serializer.date.DateTest_ISO8601_TimeZone.test_date3",
                "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue",
                "com.alibaba.json.bvt.SqlDateTest1.test_date",
                "com.alibaba.json.bvt.joda.JodaTest_0.test_for_issue",
                "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_yyyy",
                "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date_reader",
                "com.alibaba.json.bvt.joda.JodaTest_3_LocalTimeTest.test_for_issue",
                "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_4",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_new",
                "com.alibaba.json.bvt.bug.Bug_for_issue_447.test_for_issue",
                "com.alibaba.json.bvt.serializer.date.DateTest.test_7",
                "com.alibaba.json.bvt.joda.JodaTest_8_DateTimeTest.test_for_long",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_new_1",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_0",
                "com.alibaba.json.bvt.serializer.date.DateTest.test_3",
                "com.alibaba.json.bvt.date.DateFieldTest4.test_codec",
                "com.alibaba.json.bvt.issue_1400.Issue1493.test_for_issue",
                "com.alibaba.json.bvt.date.DateTest.test_parse",
                "com.alibaba.json.bvt.jdk8.LocalDateTest.test_for_issue",
                "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date2",
                "com.alibaba.json.bvt.issue_1600.Issue1660.test_for_issue",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_2",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_1",
                "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_no_asm",
                "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate",
                "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_asm",
                "com.alibaba.json.bvt.serializer.date.DateTest.test_2",
                "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_error",
                "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_2",
                "com.alibaba.json.bvt.parser.deser.date.DateParseTest3.test_date",
                "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date2",
                "com.alibaba.json.bvt.issue_1900.Issue1955.test_for_issue",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_5",
                "com.alibaba.json.bvt.issue_1200.Issue1298.test_for_issue",
                "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date_null_reader",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_de",
                "com.alibaba.json.bvt.joda.JodaTest_3_LocalTimeTest.test_for_long",
                "com.alibaba.json.bvt.joda.JodaTest_0.test_for_long",
                "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_no_asm",
                "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date4",
                "com.alibaba.json.bvt.parser.DefaultExtJSONParser_parseArray.test_7",
                "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_no_asm",
                "com.alibaba.json.bvt.date.DateFieldTest8.test_1",
                "com.alibaba.json.bvt.serializer.date.DateTest.test_4",
                "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue3",
                "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date",
                "com.alibaba.json.bvt.date.DateFieldTest10.test_5",
                "com.alibaba.json.bvt.serializer.JSONSerializerTest3.test_0",
                "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date_4",
                "com.alibaba.json.bvt.serializer.date.DateTest.test_0",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_error_0",
                "com.alibaba.json.bvt.date.DateFieldTest2.test_codec",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_tw",
                "com.alibaba.json.bvt.issue_2000.Issue2088.test_for_issue_1",
                "com.alibaba.json.bvt.joda.JodaTest_0.test_for_issue_2",
                "com.alibaba.json.bvt.date.DateFieldTest10.test_2",
                "com.alibaba.json.bvt.date.DateTest.test_date",
                "com.alibaba.json.bvt.parser.deser.SqlDateDeserializerTest2.test_sqlDate",
                "com.alibaba.json.bvt.serializer.enum_.EnumTest2.test_enum",
                "com.alibaba.json.bvt.serializer.SimpleDataFormatSerializerTest.test_0",
                "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate_zero",
                "com.alibaba.json.bvt.parser.deser.date.DateParseTest5.test_date",
                "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate_error",
                "com.alibaba.json.bvt.serializer.date.DateTest_ISO8601_TimeZone.test_date2",
                "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date",
                "com.alibaba.json.bvt.jdk8.LocalTimeTest.test_for_issue",
                "com.alibaba.json.bvt.parser.deser.date.DateParseTest10.test_date",
                "com.alibaba.json.bvt.bug.Issue978.test_for_issue2",
                "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_null_1",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_6",
                "com.alibaba.json.bvt.date.DateFieldTest10.test_3",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_2",
                "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_null_1",
                "com.alibaba.json.bvt.parser.deser.date.DateParseTest6.test_date",
                "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate_negative",
                "com.alibaba.json.bvt.date.DateFieldTest3.test_codec",
                "com.alibaba.json.bvt.bug.Bug_for_issue_331.test_for_issue",
                "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_3",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_4",
                "com.alibaba.json.bvt.date.DateFieldTest10.test_1",
                "com.alibaba.json.bvt.serializer.date.DateTest.test_8",
                "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_null_asm",
                "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_asm",
                "com.alibaba.json.bvt.date.DateTest_tz.test_codec",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_2",
                "com.alibaba.json.bvt.joda.JodaTest_8_DateTimeTest.test_for_issue",
                "com.alibaba.json.bvt.issue_1200.Issue1298.test_for_issue_1",
                "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_1",
                "com.alibaba.json.bvt.parser.deser.date.DateParseTest2.test_date",
                "com.alibaba.json.bvt.serializer.date.DateTest_ISO8601_TimeZone.test_date1",
                "com.alibaba.json.bvt.issue_1500.Issue1510.test_for_issue",
                "com.alibaba.json.bvt.issue_1600.Issue1679.test_for_issue",
                "com.alibaba.json.bvt.parser.deser.date.DateTest.test",
                "com.alibaba.json.bvt.issue_2100.Issue2156.test_for_issue_time",
                "com.alibaba.json.bvt.joda.JodaTest_0.test_for_issue_1",
                "com.alibaba.json.bvt.jdk8.LocalDateTest.test_for_long",
                "com.alibaba.json.bvt.TimestampTest.test_0",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_in",
                "com.alibaba.json.bvt.date.DateFieldTest10.test_6",
                "com.alibaba.json.bvt.issue_1200.Issue1202.test_for_issue",
                "com.alibaba.json.bvt.date.DateFieldTest6.test_0",
                "com.alibaba.json.bvt.serializer.date.DateTest.test_5",
                "com.alibaba.json.bvt.issue_1900.Issue1977.test_for_issue",
                "com.alibaba.json.bvt.parser.DateParserTest.test_date_4",
                "com.alibaba.json.bvt.bug.Bug_for_xiayucai2012.test_for_xiayucai2012",
                "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_empty",
                "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date_null",
                "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date3",
                "com.alibaba.json.bvt.date.DateFieldTest12_t.test_1",
                "com.alibaba.json.bvt.bug.Bug_for_lenolix_11.test_for_objectKey",
                "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_4",
                "com.alibaba.json.bvt.jdk8.LocalTimeTest.test_for_long",
                "com.alibaba.json.bvt.date.DateFieldTest10.test_for_zero",
            },
            "polluters": {},
            "cleaners": {},
            "victims": set(),
            "brittles": {
                "com.alibaba.json.bvt.parser.DefaultExtJSONParser_parseArray.test_8",
                "com.alibaba.json.bvt.parser.DefaultExtJSONParser_parseArray.test_7",
            },
            "statesetters": {
                "com.alibaba.json.bvt.parser.DefaultExtJSONParser_parseArray.test_7": {
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_9",
                    "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date_3",
                    "com.alibaba.json.bvt.serializer.date.DateTest4_indian.test_date",
                    "com.alibaba.json.bvt.serializer.enum_.EnumTest2.test_enum_noasm",
                    "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_null",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_3",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest8.test_date",
                    "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_null_asm",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest7.test_date",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_1",
                    "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date",
                    "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_array",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_3",
                    "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue4",
                    "com.alibaba.json.bvt.bug.Issue978.test_for_issue",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_4",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_1",
                    "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_dateFormat",
                    "com.alibaba.json.bvt.issue_1700.Issue1769.test_for_issue",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date_private.test_date",
                    "com.alibaba.json.bvt.date.DateFieldFormatTest.test_format_",
                    "com.alibaba.json.bvt.parser.deser.TimeDeserializerTest.test_time",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date_private.test_date2",
                    "com.alibaba.json.bvt.date.DateFieldTest11_reader.test_cn",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_3",
                    "com.alibaba.json.bvt.date.DateFieldTest11_reader.test_cn_1",
                    "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_null_asm",
                    "com.alibaba.json.bvt.bug.Bug_for_80108116.test_for_dateFormat",
                    "com.alibaba.json.bvt.issue_1900.Issue1901.test_for_issue_1",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_6",
                    "com.alibaba.json.bvt.date.DateFieldTest7.test_0",
                    "com.alibaba.json.bvt.issue_2000.Issue2088.test_for_issue",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_null_1",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_cn",
                    "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_asm",
                    "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue2",
                    "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_0",
                    "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_format",
                    "com.alibaba.json.bvt.parser.deser.date.DateTest.test_reader",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date2_reader",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_null_no_asm",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest1.test_date",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_1",
                    "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date_2",
                    "com.alibaba.json.bvt.issue_1900.Issue1901.test_for_issue",
                    "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_iso_format",
                    "com.alibaba.json.bvt.bug.Bug_for_lenolix_7.test_for_objectKey",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date_private.test_date_null",
                    "com.alibaba.json.bvt.bug.Bug_for_issue_316.test_for_issue",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_7",
                    "com.alibaba.json.bvt.serializer.date.DateTest5_iso8601.test_date",
                    "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_toJavaObject",
                    "com.alibaba.json.bvt.date.DateFieldTest8.test_0",
                    "com.alibaba.json.bvt.bug.Bug_for_lenolix_8.test_for_objectKey",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest4.test_date",
                    "com.alibaba.json.bvt.serializer.date.DateTest_ISO8601_TimeZone.test_date3",
                    "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue",
                    "com.alibaba.json.bvt.SqlDateTest1.test_date",
                    "com.alibaba.json.bvt.joda.JodaTest_0.test_for_issue",
                    "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_yyyy",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date_reader",
                    "com.alibaba.json.bvt.joda.JodaTest_3_LocalTimeTest.test_for_issue",
                    "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_4",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_new",
                    "com.alibaba.json.bvt.bug.Bug_for_issue_447.test_for_issue",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_7",
                    "com.alibaba.json.bvt.joda.JodaTest_8_DateTimeTest.test_for_long",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_new_1",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_0",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_3",
                    "com.alibaba.json.bvt.date.DateFieldTest4.test_codec",
                    "com.alibaba.json.bvt.issue_1400.Issue1493.test_for_issue",
                    "com.alibaba.json.bvt.date.DateTest.test_parse",
                    "com.alibaba.json.bvt.jdk8.LocalDateTest.test_for_issue",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date2",
                    "com.alibaba.json.bvt.issue_1600.Issue1660.test_for_issue",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_2",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_1",
                    "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_no_asm",
                    "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate",
                    "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_asm",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_2",
                    "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_error",
                    "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_2",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest3.test_date",
                    "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date2",
                    "com.alibaba.json.bvt.issue_1900.Issue1955.test_for_issue",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_5",
                    "com.alibaba.json.bvt.issue_1200.Issue1298.test_for_issue",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date_null_reader",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_de",
                    "com.alibaba.json.bvt.joda.JodaTest_3_LocalTimeTest.test_for_long",
                    "com.alibaba.json.bvt.joda.JodaTest_0.test_for_long",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_no_asm",
                    "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date4",
                    "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_no_asm",
                    "com.alibaba.json.bvt.date.DateFieldTest8.test_1",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_4",
                    "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue3",
                    "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_5",
                    "com.alibaba.json.bvt.serializer.JSONSerializerTest3.test_0",
                    "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date_4",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_0",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_error_0",
                    "com.alibaba.json.bvt.date.DateFieldTest2.test_codec",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_tw",
                    "com.alibaba.json.bvt.issue_2000.Issue2088.test_for_issue_1",
                    "com.alibaba.json.bvt.joda.JodaTest_0.test_for_issue_2",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_2",
                    "com.alibaba.json.bvt.date.DateTest.test_date",
                    "com.alibaba.json.bvt.parser.deser.SqlDateDeserializerTest2.test_sqlDate",
                    "com.alibaba.json.bvt.serializer.enum_.EnumTest2.test_enum",
                    "com.alibaba.json.bvt.serializer.SimpleDataFormatSerializerTest.test_0",
                    "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate_zero",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest5.test_date",
                    "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate_error",
                    "com.alibaba.json.bvt.serializer.date.DateTest_ISO8601_TimeZone.test_date2",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date",
                    "com.alibaba.json.bvt.jdk8.LocalTimeTest.test_for_issue",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest10.test_date",
                    "com.alibaba.json.bvt.bug.Issue978.test_for_issue2",
                    "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_null_1",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_6",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_3",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_2",
                    "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_null_1",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest6.test_date",
                    "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate_negative",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec",
                    "com.alibaba.json.bvt.bug.Bug_for_issue_331.test_for_issue",
                    "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_3",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_4",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_1",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_8",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_null_asm",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_asm",
                    "com.alibaba.json.bvt.date.DateTest_tz.test_codec",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_2",
                    "com.alibaba.json.bvt.joda.JodaTest_8_DateTimeTest.test_for_issue",
                    "com.alibaba.json.bvt.issue_1200.Issue1298.test_for_issue_1",
                    "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_1",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest2.test_date",
                    "com.alibaba.json.bvt.serializer.date.DateTest_ISO8601_TimeZone.test_date1",
                    "com.alibaba.json.bvt.issue_1500.Issue1510.test_for_issue",
                    "com.alibaba.json.bvt.issue_1600.Issue1679.test_for_issue",
                    "com.alibaba.json.bvt.parser.deser.date.DateTest.test",
                    "com.alibaba.json.bvt.issue_2100.Issue2156.test_for_issue_time",
                    "com.alibaba.json.bvt.joda.JodaTest_0.test_for_issue_1",
                    "com.alibaba.json.bvt.jdk8.LocalDateTest.test_for_long",
                    "com.alibaba.json.bvt.TimestampTest.test_0",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_in",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_6",
                    "com.alibaba.json.bvt.issue_1200.Issue1202.test_for_issue",
                    "com.alibaba.json.bvt.date.DateFieldTest6.test_0",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_5",
                    "com.alibaba.json.bvt.issue_1900.Issue1977.test_for_issue",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_4",
                    "com.alibaba.json.bvt.bug.Bug_for_xiayucai2012.test_for_xiayucai2012",
                    "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_empty",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date_null",
                    "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date3",
                    "com.alibaba.json.bvt.date.DateFieldTest12_t.test_1",
                    "com.alibaba.json.bvt.bug.Bug_for_lenolix_11.test_for_objectKey",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_4",
                    "com.alibaba.json.bvt.jdk8.LocalTimeTest.test_for_long",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_for_zero",
                },
                "com.alibaba.json.bvt.parser.DefaultExtJSONParser_parseArray.test_8": {
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_9",
                    "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date_3",
                    "com.alibaba.json.bvt.serializer.date.DateTest4_indian.test_date",
                    "com.alibaba.json.bvt.serializer.enum_.EnumTest2.test_enum_noasm",
                    "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_null",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_3",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest8.test_date",
                    "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_null_asm",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest7.test_date",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_1",
                    "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date",
                    "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_array",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_3",
                    "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue4",
                    "com.alibaba.json.bvt.bug.Issue978.test_for_issue",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_4",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_1",
                    "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_dateFormat",
                    "com.alibaba.json.bvt.issue_1700.Issue1769.test_for_issue",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date_private.test_date",
                    "com.alibaba.json.bvt.date.DateFieldFormatTest.test_format_",
                    "com.alibaba.json.bvt.parser.deser.TimeDeserializerTest.test_time",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date_private.test_date2",
                    "com.alibaba.json.bvt.date.DateFieldTest11_reader.test_cn",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_3",
                    "com.alibaba.json.bvt.date.DateFieldTest11_reader.test_cn_1",
                    "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_null_asm",
                    "com.alibaba.json.bvt.bug.Bug_for_80108116.test_for_dateFormat",
                    "com.alibaba.json.bvt.issue_1900.Issue1901.test_for_issue_1",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_6",
                    "com.alibaba.json.bvt.date.DateFieldTest7.test_0",
                    "com.alibaba.json.bvt.issue_2000.Issue2088.test_for_issue",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_null_1",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_cn",
                    "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_asm",
                    "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue2",
                    "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_0",
                    "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_format",
                    "com.alibaba.json.bvt.parser.deser.date.DateTest.test_reader",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date2_reader",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_null_no_asm",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest1.test_date",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_1",
                    "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date_2",
                    "com.alibaba.json.bvt.issue_1900.Issue1901.test_for_issue",
                    "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_iso_format",
                    "com.alibaba.json.bvt.bug.Bug_for_lenolix_7.test_for_objectKey",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date_private.test_date_null",
                    "com.alibaba.json.bvt.bug.Bug_for_issue_316.test_for_issue",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_7",
                    "com.alibaba.json.bvt.serializer.date.DateTest5_iso8601.test_date",
                    "com.alibaba.json.bvt.bug.Bug_for_cnhans.test_toJavaObject",
                    "com.alibaba.json.bvt.date.DateFieldTest8.test_0",
                    "com.alibaba.json.bvt.bug.Bug_for_lenolix_8.test_for_objectKey",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest4.test_date",
                    "com.alibaba.json.bvt.serializer.date.DateTest_ISO8601_TimeZone.test_date3",
                    "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue",
                    "com.alibaba.json.bvt.SqlDateTest1.test_date",
                    "com.alibaba.json.bvt.joda.JodaTest_0.test_for_issue",
                    "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_yyyy",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date_reader",
                    "com.alibaba.json.bvt.joda.JodaTest_3_LocalTimeTest.test_for_issue",
                    "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_4",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_new",
                    "com.alibaba.json.bvt.bug.Bug_for_issue_447.test_for_issue",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_7",
                    "com.alibaba.json.bvt.joda.JodaTest_8_DateTimeTest.test_for_long",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_new_1",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_0",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_3",
                    "com.alibaba.json.bvt.date.DateFieldTest4.test_codec",
                    "com.alibaba.json.bvt.issue_1400.Issue1493.test_for_issue",
                    "com.alibaba.json.bvt.date.DateTest.test_parse",
                    "com.alibaba.json.bvt.jdk8.LocalDateTest.test_for_issue",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date2",
                    "com.alibaba.json.bvt.issue_1600.Issue1660.test_for_issue",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_2",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_1",
                    "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_no_asm",
                    "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate",
                    "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_asm",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_2",
                    "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_error",
                    "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_2",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest3.test_date",
                    "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date2",
                    "com.alibaba.json.bvt.issue_1900.Issue1955.test_for_issue",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_5",
                    "com.alibaba.json.bvt.issue_1200.Issue1298.test_for_issue",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date_null_reader",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_de",
                    "com.alibaba.json.bvt.joda.JodaTest_3_LocalTimeTest.test_for_long",
                    "com.alibaba.json.bvt.joda.JodaTest_0.test_for_long",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_no_asm",
                    "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date4",
                    "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_no_asm",
                    "com.alibaba.json.bvt.date.DateFieldTest8.test_1",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_4",
                    "com.alibaba.json.bvt.issue_2200.Issue2241.test_for_issue3",
                    "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_5",
                    "com.alibaba.json.bvt.serializer.JSONSerializerTest3.test_0",
                    "com.alibaba.json.bvt.serializer.DateFormatSerializerTest.test_date_4",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_0",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_error_0",
                    "com.alibaba.json.bvt.date.DateFieldTest2.test_codec",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_tw",
                    "com.alibaba.json.bvt.issue_2000.Issue2088.test_for_issue_1",
                    "com.alibaba.json.bvt.joda.JodaTest_0.test_for_issue_2",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_2",
                    "com.alibaba.json.bvt.date.DateTest.test_date",
                    "com.alibaba.json.bvt.parser.deser.SqlDateDeserializerTest2.test_sqlDate",
                    "com.alibaba.json.bvt.serializer.enum_.EnumTest2.test_enum",
                    "com.alibaba.json.bvt.serializer.SimpleDataFormatSerializerTest.test_0",
                    "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate_zero",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest5.test_date",
                    "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate_error",
                    "com.alibaba.json.bvt.serializer.date.DateTest_ISO8601_TimeZone.test_date2",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date",
                    "com.alibaba.json.bvt.jdk8.LocalTimeTest.test_for_issue",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest10.test_date",
                    "com.alibaba.json.bvt.bug.Issue978.test_for_issue2",
                    "com.alibaba.json.bvt.date.DateFieldTest2.test_codec_null_1",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_6",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_3",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_2",
                    "com.alibaba.json.bvt.date.DateFieldTest4.test_codec_null_1",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest6.test_date",
                    "com.alibaba.json.bvt.parser.TypeUtilsTest_castToDate.test_castToDate_negative",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec",
                    "com.alibaba.json.bvt.bug.Bug_for_issue_331.test_for_issue",
                    "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_3",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_cn_4",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_1",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_8",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_null_asm",
                    "com.alibaba.json.bvt.date.DateFieldTest3.test_codec_asm",
                    "com.alibaba.json.bvt.date.DateTest_tz.test_codec",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_2",
                    "com.alibaba.json.bvt.joda.JodaTest_8_DateTimeTest.test_for_issue",
                    "com.alibaba.json.bvt.issue_1200.Issue1298.test_for_issue_1",
                    "com.alibaba.json.bvt.parser.DateParserTest_sql_timestamp.test_date_1",
                    "com.alibaba.json.bvt.parser.deser.date.DateParseTest2.test_date",
                    "com.alibaba.json.bvt.serializer.date.DateTest_ISO8601_TimeZone.test_date1",
                    "com.alibaba.json.bvt.issue_1500.Issue1510.test_for_issue",
                    "com.alibaba.json.bvt.issue_1600.Issue1679.test_for_issue",
                    "com.alibaba.json.bvt.parser.deser.date.DateTest.test",
                    "com.alibaba.json.bvt.issue_2100.Issue2156.test_for_issue_time",
                    "com.alibaba.json.bvt.joda.JodaTest_0.test_for_issue_1",
                    "com.alibaba.json.bvt.jdk8.LocalDateTest.test_for_long",
                    "com.alibaba.json.bvt.TimestampTest.test_0",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_in",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_6",
                    "com.alibaba.json.bvt.issue_1200.Issue1202.test_for_issue",
                    "com.alibaba.json.bvt.date.DateFieldTest6.test_0",
                    "com.alibaba.json.bvt.serializer.date.DateTest.test_5",
                    "com.alibaba.json.bvt.issue_1900.Issue1977.test_for_issue",
                    "com.alibaba.json.bvt.parser.DateParserTest.test_date_4",
                    "com.alibaba.json.bvt.bug.Bug_for_xiayucai2012.test_for_xiayucai2012",
                    "com.alibaba.json.bvt.parser.deser.date.DateFormatDeserializerTest.test_dateFormat_empty",
                    "com.alibaba.json.bvt.parser.array.BeanToArrayTest_date.test_date_null",
                    "com.alibaba.json.bvt.parser.DefaultJSONParserTest_date.test_date3",
                    "com.alibaba.json.bvt.date.DateFieldTest12_t.test_1",
                    "com.alibaba.json.bvt.bug.Bug_for_lenolix_11.test_for_objectKey",
                    "com.alibaba.json.bvt.date.DateFieldTest9.test_kr_4",
                    "com.alibaba.json.bvt.jdk8.LocalTimeTest.test_for_long",
                    "com.alibaba.json.bvt.date.DateFieldTest10.test_for_zero",
                },
            },
        },
    },
    "https://github.com/kevinsawicki/http-request.git": {
        "sha": "2d62a3e9da726942a93cf16b6e91c0187e6c0136",
        "lib": {
            "methods": {
                "com.github.kevinsawicki.http.HttpRequestTest.singleSslSocketFactory",
                "com.github.kevinsawicki.http.HttpRequestTest.basicProxyAuthentication",
                "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedVarargsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.verifierAccepts",
                "com.github.kevinsawicki.http.HttpRequestTest.headWithVaragsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithPercent",
                "com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.singleVerifier",
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedVarargsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory",
                "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getWithMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithSpace",
                "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedVarargsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.postWithMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithUnicode",
                "com.github.kevinsawicki.http.HttpRequestTest.headWithMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory",
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithVarargsQueryParams",
            },
            "polluters": {
                "com.github.kevinsawicki.http.HttpRequestTest.basicProxyAuthentication": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithPercent": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithSpace": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithUnicode": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getWithMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.headWithMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.headWithVaragsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.postWithMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.singleSslSocketFactory": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.singleVerifier": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
                "com.github.kevinsawicki.http.HttpRequestTest.verifierAccepts": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory"
                },
            },
            "cleaners": {
                "com.github.kevinsawicki.http.HttpRequestTest.basicProxyAuthentication": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithPercent": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithSpace": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithUnicode": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getWithMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.headWithMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.headWithVaragsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.postWithMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.singleSslSocketFactory": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.singleVerifier": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
                "com.github.kevinsawicki.http.HttpRequestTest.verifierAccepts": {
                    "com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory": {
                        "com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory"
                    }
                },
            },
            "victims": {
                "com.github.kevinsawicki.http.HttpRequestTest.singleSslSocketFactory",
                "com.github.kevinsawicki.http.HttpRequestTest.basicProxyAuthentication",
                "com.github.kevinsawicki.http.HttpRequestTest.postWithEscapedMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedVarargsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.verifierAccepts",
                "com.github.kevinsawicki.http.HttpRequestTest.headWithVaragsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithPercent",
                "com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.singleVerifier",
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithEscapedVarargsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getWithMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithSpace",
                "com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedVarargsQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.postWithMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithUnicode",
                "com.github.kevinsawicki.http.HttpRequestTest.headWithMappedQueryParams",
                "com.github.kevinsawicki.http.HttpRequestTest.deleteWithVarargsQueryParams",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/openpojo/openpojo.git": {
        "sha": "9badbcc4593e797accfed5e51bec9f2b843f0f67",
        "NA": {
            "methods": {
                "com.openpojo.log.JavaLoggerTest.shouldLogInVariousLevels",
                "com.openpojo.issues.issue112.IssueTest.shouldNotFail",
                "com.openpojo.validation.test.impl.SerializableTesterTest.shouldSkipOverNonSerializableClass",
                "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                "com.openpojo.log.SL4JLoggerTest.testToString",
                "com.openpojo.log.LoggerFactoryTest.shouldReturnSetLogger",
                "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                "com.openpojo.log.JavaLoggerTest.shouldTestError",
                "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                "com.openpojo.log.JavaLoggerTest.testToString",
                "com.openpojo.log.Log4JLoggerTest.testToString",
                "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                "com.openpojo.validation.utils.ValidationHelperTest.shouldReportMissingASMProperly",
                "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
            },
            "polluters": {
                "com.openpojo.issues.issue112.IssueTest.shouldNotFail": {
                    "com.openpojo.log.JavaLoggerTest.shouldLogInVariousLevels",
                    "com.openpojo.log.LoggerFactoryTest.shouldReturnSetLogger",
                    "com.openpojo.log.JavaLoggerTest.shouldTestError",
                    "com.openpojo.log.JavaLoggerTest.testToString",
                },
                "com.openpojo.validation.test.impl.SerializableTesterTest.shouldSkipOverNonSerializableClass": {
                    "com.openpojo.log.JavaLoggerTest.shouldLogInVariousLevels",
                    "com.openpojo.log.LoggerFactoryTest.shouldReturnSetLogger",
                    "com.openpojo.log.JavaLoggerTest.shouldTestError",
                    "com.openpojo.log.JavaLoggerTest.testToString",
                },
                "com.openpojo.validation.utils.ValidationHelperTest.shouldReportMissingASMProperly": {
                    "com.openpojo.log.JavaLoggerTest.shouldLogInVariousLevels",
                    "com.openpojo.log.LoggerFactoryTest.shouldReturnSetLogger",
                    "com.openpojo.log.JavaLoggerTest.shouldTestError",
                    "com.openpojo.log.JavaLoggerTest.testToString",
                },
            },
            "cleaners": {
                "com.openpojo.issues.issue112.IssueTest.shouldNotFail": {
                    "com.openpojo.log.JavaLoggerTest.shouldLogInVariousLevels": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                    "com.openpojo.log.JavaLoggerTest.shouldTestError": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                    "com.openpojo.log.JavaLoggerTest.testToString": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                    "com.openpojo.log.LoggerFactoryTest.shouldReturnSetLogger": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                },
                "com.openpojo.validation.test.impl.SerializableTesterTest.shouldSkipOverNonSerializableClass": {
                    "com.openpojo.log.JavaLoggerTest.shouldLogInVariousLevels": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                    "com.openpojo.log.JavaLoggerTest.shouldTestError": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                    "com.openpojo.log.JavaLoggerTest.testToString": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                    "com.openpojo.log.LoggerFactoryTest.shouldReturnSetLogger": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                },
                "com.openpojo.validation.utils.ValidationHelperTest.shouldReportMissingASMProperly": {
                    "com.openpojo.log.JavaLoggerTest.shouldLogInVariousLevels": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                    "com.openpojo.log.JavaLoggerTest.shouldTestError": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                    "com.openpojo.log.JavaLoggerTest.testToString": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                    "com.openpojo.log.LoggerFactoryTest.shouldReturnSetLogger": {
                        "com.openpojo.log.SL4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.ensureSupportedLoggersAndOrder",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByClass",
                        "com.openpojo.log.Log4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.SL4JLoggerTest.shouldLogInVariousLevels",
                        "com.openpojo.log.Log4JLoggerTest.testToString",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultLoggerClassByCategory",
                        "com.openpojo.log.SL4JLoggerTest.shouldTestFatal",
                        "com.openpojo.log.LoggerFactoryTest.shouldReturnDefaultCategoryByClass",
                    },
                },
            },
            "victims": {
                "com.openpojo.issues.issue112.IssueTest.shouldNotFail",
                "com.openpojo.validation.test.impl.SerializableTesterTest.shouldSkipOverNonSerializableClass",
                "com.openpojo.validation.utils.ValidationHelperTest.shouldReportMissingASMProperly",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/vmware/admiral.git": {
        "sha": "e4b02936cc7d4ff2714e7231db0c4373ba5d48a2",
        "compute": {
            "methods": {
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testResourcePlacementReservationRequest",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testDeleteWhenActiveReservation",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGroupResourcePlacementQueryEmptyTenantLinks",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testDeleteWhenNoActiveReservation",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGroupPlacementResourcePoolValidation",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGroupPlacementValidation",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGroupResourcePlacementServiceTenantAndGroup",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGetGroupResourcePlacementState",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testMemoryPlacementPatchRequest",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testUpdateWhenActiveReservations",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testUpdateWhenNoActiveReservations",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testProvisioningWithUnlimitedPlacement",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testDeleteWhenWrongReservationCount",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testMemoryPlacementReservationRequest",
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGroupResourcePlacementService",
            },
            "polluters": {},
            "cleaners": {},
            "victims": set(),
            "brittles": {
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testMemoryPlacementReservationRequest"
            },
            "statesetters": {
                "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testMemoryPlacementReservationRequest": {
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testResourcePlacementReservationRequest",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testDeleteWhenActiveReservation",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGroupResourcePlacementQueryEmptyTenantLinks",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGroupPlacementResourcePoolValidation",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testDeleteWhenNoActiveReservation",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGroupPlacementValidation",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGroupResourcePlacementServiceTenantAndGroup",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGetGroupResourcePlacementState",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testMemoryPlacementPatchRequest",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testUpdateWhenActiveReservations",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testUpdateWhenNoActiveReservations",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testProvisioningWithUnlimitedPlacement",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testDeleteWhenWrongReservationCount",
                    "com.vmware.admiral.compute.container.GroupResourcePlacementServiceTest.testGroupResourcePlacementService",
                }
            },
        },
        "request": {
            "methods": {
                "com.vmware.admiral.request.kubernetes.RequestBrokerKubernetesServiceTest.testRequestLifeCycleOnSpecificGroupPlacement",
                "com.vmware.admiral.request.kubernetes.RequestBrokerKubernetesServiceTest.testRequestStateHasK8sInfo",
                "com.vmware.admiral.request.kubernetes.RequestBrokerKubernetesServiceTest.testRequestLifeCycle",
            },
            "polluters": {
                "com.vmware.admiral.request.kubernetes.RequestBrokerKubernetesServiceTest.testRequestStateHasK8sInfo": {
                    "com.vmware.admiral.request.kubernetes.RequestBrokerKubernetesServiceTest.testRequestLifeCycleOnSpecificGroupPlacement",
                    "com.vmware.admiral.request.kubernetes.RequestBrokerKubernetesServiceTest.testRequestLifeCycle",
                }
            },
            "cleaners": {},
            "victims": {
                "com.vmware.admiral.request.kubernetes.RequestBrokerKubernetesServiceTest.testRequestStateHasK8sInfo"
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/tbsalling/aismessages.git": {
        "sha": "7b0c4c708b6bb9a6da3d5737bcad1857ade8a931",
        "NA": {
            "methods": {
                "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canFlushEmpty",
                "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canHandleUnfragmentedMessageReceived",
                "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canHandleFragmentedMessageReceived",
                "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canFlushUnhandled",
            },
            "polluters": {
                "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canHandleFragmentedMessageReceived": {
                    "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canFlushEmpty",
                    "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canFlushUnhandled",
                },
                "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canHandleUnfragmentedMessageReceived": {
                    "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canFlushEmpty",
                    "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canFlushUnhandled",
                },
            },
            "cleaners": {},
            "victims": {
                "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canHandleUnfragmentedMessageReceived",
                "dk.tbsalling.aismessages.nmea.NMEAMessageHandlerTest.canHandleFragmentedMessageReceived",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/doanduyhai/Achilles.git": {
        "sha": "e3099bdce342910951c4862c78751fd81ed4552e",
        "integration-test-2_1": {
            "methods": {
                "info.archinnov.achilles.it.TestNativeQueries.should_limit_displayed_returned_results",
                "info.archinnov.achilles.it.bugs.ClassLevelTracing.should_activate_tracing_programmatically",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_simple_index",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_value",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_entry",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_index",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_multi_clustering_columns_slice",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_inequality",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_slice",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_full_collection_index",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_partition_key",
                "info.archinnov.achilles.it.TestCRUDSimpleEntity.should_insert_with_insert_strategy_non_null_fields",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_collection_index",
                "info.archinnov.achilles.it.TestTypedQueries.should_limit_displayed_returned_results",
            },
            "polluters": {
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_collection_index": {
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_simple_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_value",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_entry",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_multi_clustering_columns_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_inequality",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_full_collection_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_partition_key",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_index",
                },
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_full_collection_index": {
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_simple_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_value",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_entry",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_multi_clustering_columns_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_inequality",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_partition_key",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_collection_index",
                },
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column": {
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_simple_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_value",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_entry",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_multi_clustering_columns_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_inequality",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_full_collection_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_partition_key",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_collection_index",
                },
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_slice": {
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_simple_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_value",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_entry",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_multi_clustering_columns_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_inequality",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_full_collection_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_partition_key",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_collection_index",
                },
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_multi_clustering_columns_slice": {
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_simple_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_value",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_entry",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_inequality",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_full_collection_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_partition_key",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_collection_index",
                },
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_index": {
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_simple_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_value",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_entry",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_multi_clustering_columns_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_inequality",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_full_collection_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_partition_key",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_collection_index",
                },
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_value": {
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_simple_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_entry",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_multi_clustering_columns_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_inequality",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_full_collection_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_partition_key",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_collection_index",
                },
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_simple_index": {
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_value",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_entry",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_multi_clustering_columns_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_inequality",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_slice",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_full_collection_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_partition_key",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_index",
                    "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_collection_index",
                },
            },
            "cleaners": {},
            "victims": {
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_simple_index",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_value",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_multi_clustering_columns_slice",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_index_and_clustering_column_slice",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_full_collection_index",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_map_key_index",
                "info.archinnov.achilles.it.TestEntityWithComplexIndices.should_query_using_collection_index",
            },
            "brittles": {
                "info.archinnov.achilles.it.TestCRUDSimpleEntity.should_insert_with_insert_strategy_non_null_fields"
            },
            "statesetters": {
                "info.archinnov.achilles.it.TestCRUDSimpleEntity.should_insert_with_insert_strategy_non_null_fields": {
                    "info.archinnov.achilles.it.TestNativeQueries.should_limit_displayed_returned_results",
                    "info.archinnov.achilles.it.bugs.ClassLevelTracing.should_activate_tracing_programmatically",
                    "info.archinnov.achilles.it.TestTypedQueries.should_limit_displayed_returned_results",
                }
            },
        },
        "integration-test-3_10": {
            "methods": {
                "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_group_by_partition_keys_and_one_clustering",
                "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_with_group_by_first_and_second_clustering",
                "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_with_group_by_second_clustering",
                "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_group_by_partition_keys",
                "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_with_group_by_first_clustering",
            },
            "polluters": {
                "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_group_by_partition_keys": {
                    "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_group_by_partition_keys_and_one_clustering",
                    "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_with_group_by_first_and_second_clustering",
                    "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_with_group_by_second_clustering",
                    "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_with_group_by_first_clustering",
                },
                "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_group_by_partition_keys_and_one_clustering": {
                    "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_group_by_partition_keys",
                    "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_with_group_by_first_and_second_clustering",
                    "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_with_group_by_second_clustering",
                    "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_with_group_by_first_clustering",
                },
            },
            "cleaners": {},
            "victims": {
                "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_group_by_partition_keys",
                "info.archinnov.achilles.it.TestEntityForGroupByIT.should_select_sum_group_by_partition_keys_and_one_clustering",
            },
            "brittles": set(),
            "statesetters": {},
        },
        "integration-test-2_2": {
            "methods": {
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_simple_index_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_entry_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_full_collection_index_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_partition_key_asJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_index_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_collection_index_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_value_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_clustering_column_fromJSON",
            },
            "polluters": {
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_collection_index_fromJSON": {
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_simple_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_entry_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_full_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_partition_key_asJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_value_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_clustering_column_fromJSON",
                },
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_full_collection_index_fromJSON": {
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_simple_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_entry_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_partition_key_asJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_value_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_clustering_column_fromJSON",
                },
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_clustering_column_fromJSON": {
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_simple_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_entry_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_full_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_partition_key_asJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_value_fromJSON",
                },
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_entry_fromJSON": {
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_simple_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_full_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_partition_key_asJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_value_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_clustering_column_fromJSON",
                },
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_index_fromJSON": {
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_simple_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_entry_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_full_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_partition_key_asJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_value_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_clustering_column_fromJSON",
                },
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_value_fromJSON": {
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_simple_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_entry_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_full_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_partition_key_asJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_clustering_column_fromJSON",
                },
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_simple_index_fromJSON": {
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_entry_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_full_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_partition_key_asJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_collection_index_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_value_fromJSON",
                    "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_clustering_column_fromJSON",
                },
            },
            "cleaners": {},
            "victims": {
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_simple_index_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_entry_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_full_collection_index_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_index_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_collection_index_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_map_key_value_fromJSON",
                "info.archinnov.achilles.it.TestEntityWithIndicesForJSON.should_query_using_index_and_clustering_column_fromJSON",
            },
            "brittles": set(),
            "statesetters": {},
        },
        "integration-test-3_7": {
            "methods": {
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like_non_tokenizer",
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_end_with",
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_contains",
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_prefix_non_tokenizer",
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like",
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_eq_non_tokenizer",
            },
            "polluters": {
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_contains": {
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like_non_tokenizer",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_end_with",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_prefix_non_tokenizer",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_eq_non_tokenizer",
                },
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_end_with": {
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like_non_tokenizer",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_contains",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_prefix_non_tokenizer",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_eq_non_tokenizer",
                },
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_eq_non_tokenizer": {
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like_non_tokenizer",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_end_with",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_contains",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_prefix_non_tokenizer",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like",
                },
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like": {
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like_non_tokenizer",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_end_with",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_contains",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_prefix_non_tokenizer",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_eq_non_tokenizer",
                },
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like_non_tokenizer": {
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_end_with",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_contains",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_prefix_non_tokenizer",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_eq_non_tokenizer",
                },
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_prefix_non_tokenizer": {
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like_non_tokenizer",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_end_with",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_contains",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like",
                    "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_eq_non_tokenizer",
                },
            },
            "cleaners": {},
            "victims": {
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like_non_tokenizer",
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_end_with",
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_contains",
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_prefix_non_tokenizer",
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_like",
                "info.archinnov.achilles.it.TestEntityWithSASIIndices.should_search_using_eq_non_tokenizer",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/dropwizard/dropwizard.git": {
        "sha": "07dfaed697427e208d65049f80a5d1949833b7cd",
        "dropwizard-logging": {
            "methods": {
                "io.dropwizard.logging.ThrottlingAppenderWrapperTest.belowThrottlingLimit",
                "io.dropwizard.logging.DefaultLoggingFactoryTest.testConfigure",
                "io.dropwizard.logging.DefaultLoggingFactoryPrintErrorMessagesTest.testWhenSettingUpLoggingWithValidConfiguration_NoErrorMessageIsPrintedToConsole",
                "io.dropwizard.logging.ThrottlingAppenderWrapperTest.overThrottlingLimit",
                "io.dropwizard.logging.TlsSocketAppenderFactoryTest.testTlsLogging",
                "io.dropwizard.logging.TcpSocketAppenderFactoryTest.testBufferingTcpLogging",
                "io.dropwizard.logging.DefaultLoggingFactoryPrintErrorMessagesTest.testWhenFileAppenderDoesNotHaveWritePermissionToFolder_PrintsErrorMessageToConsole",
                "io.dropwizard.logging.DefaultLoggingFactoryPrintErrorMessagesTest.testLogbackStatusPrinterPrintStreamIsRestoredToSystemOut",
                "io.dropwizard.logging.UdpSocketAppenderFactoryTest.testSendLogsByTcp",
                "io.dropwizard.logging.DefaultLoggingFactoryTest.testResetAppenders",
                "io.dropwizard.logging.TcpSocketAppenderFactoryTest.testTestTcpLogging",
            },
            "polluters": {
                "io.dropwizard.logging.DefaultLoggingFactoryPrintErrorMessagesTest.testLogbackStatusPrinterPrintStreamIsRestoredToSystemOut": {
                    "io.dropwizard.logging.ThrottlingAppenderWrapperTest.overThrottlingLimit",
                    "io.dropwizard.logging.ThrottlingAppenderWrapperTest.belowThrottlingLimit",
                }
            },
            "cleaners": {
                "io.dropwizard.logging.DefaultLoggingFactoryPrintErrorMessagesTest.testLogbackStatusPrinterPrintStreamIsRestoredToSystemOut": {
                    "io.dropwizard.logging.ThrottlingAppenderWrapperTest.belowThrottlingLimit": {
                        "io.dropwizard.logging.DefaultLoggingFactoryTest.testConfigure",
                        "io.dropwizard.logging.DefaultLoggingFactoryPrintErrorMessagesTest.testWhenSettingUpLoggingWithValidConfiguration_NoErrorMessageIsPrintedToConsole",
                        "io.dropwizard.logging.TlsSocketAppenderFactoryTest.testTlsLogging",
                        "io.dropwizard.logging.TcpSocketAppenderFactoryTest.testBufferingTcpLogging",
                        "io.dropwizard.logging.DefaultLoggingFactoryPrintErrorMessagesTest.testWhenFileAppenderDoesNotHaveWritePermissionToFolder_PrintsErrorMessageToConsole",
                        "io.dropwizard.logging.DefaultLoggingFactoryTest.testResetAppenders",
                        "io.dropwizard.logging.UdpSocketAppenderFactoryTest.testSendLogsByTcp",
                        "io.dropwizard.logging.TcpSocketAppenderFactoryTest.testTestTcpLogging",
                    },
                    "io.dropwizard.logging.ThrottlingAppenderWrapperTest.overThrottlingLimit": {
                        "io.dropwizard.logging.DefaultLoggingFactoryTest.testConfigure",
                        "io.dropwizard.logging.DefaultLoggingFactoryPrintErrorMessagesTest.testWhenSettingUpLoggingWithValidConfiguration_NoErrorMessageIsPrintedToConsole",
                        "io.dropwizard.logging.TlsSocketAppenderFactoryTest.testTlsLogging",
                        "io.dropwizard.logging.TcpSocketAppenderFactoryTest.testBufferingTcpLogging",
                        "io.dropwizard.logging.DefaultLoggingFactoryPrintErrorMessagesTest.testWhenFileAppenderDoesNotHaveWritePermissionToFolder_PrintsErrorMessageToConsole",
                        "io.dropwizard.logging.DefaultLoggingFactoryTest.testResetAppenders",
                        "io.dropwizard.logging.UdpSocketAppenderFactoryTest.testSendLogsByTcp",
                        "io.dropwizard.logging.TcpSocketAppenderFactoryTest.testTestTcpLogging",
                    },
                }
            },
            "victims": {
                "io.dropwizard.logging.DefaultLoggingFactoryPrintErrorMessagesTest.testLogbackStatusPrinterPrintStreamIsRestoredToSystemOut"
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/elasticjob/elastic-job-lite.git": {
        "sha": "b022898ef1b8c984e17efb2a422ee45f6b13e46e",
        "elastic-job-lite-core": {
            "methods": {
                "io.elasticjob.lite.integrate.std.simple.DisabledJobTest.assertJobInit",
                "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNecessary",
                "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForNotMonitorTest.assertJobInit",
                "io.elasticjob.lite.integrate.std.simple.SimpleElasticJobTest.assertJobInit",
                "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForInstanceShutdown",
                "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetLocalShardingItemsWithDisabledServer",
                "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertRemoveLocalInstancePath",
                "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWithLeader",
                "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteThrowsExceptionTest.assertJobInit",
                "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherInstanceCrashed",
                "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenRemoveLeaderInstancePathWithAvailableServer",
                "io.elasticjob.lite.integrate.std.dataflow.OneOffDataflowElasticJobTest.assertJobInit",
                "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertUpdateLocalInstancePath",
                "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteFailureTest.assertJobInit",
                "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForEnabledServer",
                "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertIsNotLocalInstancePath",
                "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest.assertListenServersChangedJobListenerWhenIsInstanceChange",
                "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetFailoverItems",
                "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfLeaderAndReconcileServiceIsRunning",
                "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest.assertTriggerWhenJobIsRunning",
                "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertRemoveLocalInstancePathForPausedJob",
                "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsReconnected",
                "io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest.assertMonitorWithDumpCommand",
                "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenServerEnableWithoutLeader",
                "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest.assertCronSettingChangedJobListenerWhenIsCronPathAndUpdateAndFindJob",
                "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetShardingItemsWithEnabledServer",
                "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForDisabledServer",
                "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertRemoveLocalInstancePathForReconnectedRegistryCenter",
                "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherFailoverInstanceCrashed",
                "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest.assertTriggerWhenJobIsNotRunning",
                "io.elasticjob.lite.api.JobSchedulerTest.assertInit",
                "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobTest.assertJobInit",
                "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest.assertPersistEphemeralSequential",
                "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsLost",
                "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsOther",
                "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForMultipleThreadsTest.assertJobInit",
                "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeader",
                "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest.assertListenServersChangedJobListenerWhenIsServerChange",
                "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfNotLeaderAndReconcileServiceIsNotRunning",
                "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsSameInstance",
                "io.elasticjob.lite.internal.schedule.JobRegistryTest.assertGetCurrentShardingTotalCountIfNull",
                "io.elasticjob.lite.integrate.std.script.ScriptElasticJobTest.assertJobInit",
                "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItems",
                "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest.assertMonitorWithCommand",
                "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNotNecessary",
                "io.elasticjob.lite.internal.schedule.JobRegistryTest.assertGetCurrentShardingTotalCountIfNotNull",
                "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetLocalShardingItemsWithEnabledServer",
                "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWhenHasLeader",
                "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItemsIfShutdown",
                "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest.assertPersistSequential",
            },
            "polluters": {
                "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItemsIfShutdown": {
                    "io.elasticjob.lite.api.JobSchedulerTest.assertInit",
                    "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertRemoveLocalInstancePathForReconnectedRegistryCenter",
                    "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertRemoveLocalInstancePath",
                    "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertRemoveLocalInstancePathForPausedJob",
                },
                "io.elasticjob.lite.internal.schedule.JobRegistryTest.assertGetCurrentShardingTotalCountIfNull": {
                    "io.elasticjob.lite.internal.schedule.JobRegistryTest.assertGetCurrentShardingTotalCountIfNotNull"
                },
                "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest.assertPersistEphemeralSequential": {
                    "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest.assertPersistSequential"
                },
            },
            "cleaners": {
                "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItemsIfShutdown": {
                    "io.elasticjob.lite.api.JobSchedulerTest.assertInit": {
                        "io.elasticjob.lite.integrate.std.simple.DisabledJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNecessary",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForNotMonitorTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.simple.SimpleElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForInstanceShutdown",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetLocalShardingItemsWithDisabledServer",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWithLeader",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteThrowsExceptionTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherInstanceCrashed",
                        "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenRemoveLeaderInstancePathWithAvailableServer",
                        "io.elasticjob.lite.integrate.std.dataflow.OneOffDataflowElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertUpdateLocalInstancePath",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteFailureTest.assertJobInit",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForEnabledServer",
                        "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertIsNotLocalInstancePath",
                        "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest.assertListenServersChangedJobListenerWhenIsInstanceChange",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetFailoverItems",
                        "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfLeaderAndReconcileServiceIsRunning",
                        "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest.assertTriggerWhenJobIsRunning",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsReconnected",
                        "io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest.assertMonitorWithDumpCommand",
                        "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenServerEnableWithoutLeader",
                        "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest.assertCronSettingChangedJobListenerWhenIsCronPathAndUpdateAndFindJob",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetShardingItemsWithEnabledServer",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForDisabledServer",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherFailoverInstanceCrashed",
                        "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest.assertTriggerWhenJobIsNotRunning",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsLost",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsOther",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForMultipleThreadsTest.assertJobInit",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeader",
                        "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest.assertListenServersChangedJobListenerWhenIsServerChange",
                        "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfNotLeaderAndReconcileServiceIsNotRunning",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsSameInstance",
                        "io.elasticjob.lite.integrate.std.script.ScriptElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItems",
                        "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest.assertMonitorWithCommand",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNotNecessary",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetLocalShardingItemsWithEnabledServer",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWhenHasLeader",
                    },
                    "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertRemoveLocalInstancePathForPausedJob": {
                        "io.elasticjob.lite.integrate.std.simple.DisabledJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNecessary",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForNotMonitorTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.simple.SimpleElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForInstanceShutdown",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetLocalShardingItemsWithDisabledServer",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWithLeader",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteThrowsExceptionTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherInstanceCrashed",
                        "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenRemoveLeaderInstancePathWithAvailableServer",
                        "io.elasticjob.lite.integrate.std.dataflow.OneOffDataflowElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertUpdateLocalInstancePath",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteFailureTest.assertJobInit",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForEnabledServer",
                        "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertIsNotLocalInstancePath",
                        "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest.assertListenServersChangedJobListenerWhenIsInstanceChange",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetFailoverItems",
                        "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfLeaderAndReconcileServiceIsRunning",
                        "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest.assertTriggerWhenJobIsRunning",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsReconnected",
                        "io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest.assertMonitorWithDumpCommand",
                        "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenServerEnableWithoutLeader",
                        "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest.assertCronSettingChangedJobListenerWhenIsCronPathAndUpdateAndFindJob",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetShardingItemsWithEnabledServer",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForDisabledServer",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherFailoverInstanceCrashed",
                        "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest.assertTriggerWhenJobIsNotRunning",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsLost",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsOther",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForMultipleThreadsTest.assertJobInit",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeader",
                        "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest.assertListenServersChangedJobListenerWhenIsServerChange",
                        "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfNotLeaderAndReconcileServiceIsNotRunning",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsSameInstance",
                        "io.elasticjob.lite.integrate.std.script.ScriptElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItems",
                        "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest.assertMonitorWithCommand",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNotNecessary",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetLocalShardingItemsWithEnabledServer",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWhenHasLeader",
                    },
                    "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertRemoveLocalInstancePathForReconnectedRegistryCenter": {
                        "io.elasticjob.lite.integrate.std.simple.DisabledJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNecessary",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForNotMonitorTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.simple.SimpleElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForInstanceShutdown",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetLocalShardingItemsWithDisabledServer",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWithLeader",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteThrowsExceptionTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherInstanceCrashed",
                        "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenRemoveLeaderInstancePathWithAvailableServer",
                        "io.elasticjob.lite.integrate.std.dataflow.OneOffDataflowElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertUpdateLocalInstancePath",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteFailureTest.assertJobInit",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForEnabledServer",
                        "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertIsNotLocalInstancePath",
                        "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest.assertListenServersChangedJobListenerWhenIsInstanceChange",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetFailoverItems",
                        "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfLeaderAndReconcileServiceIsRunning",
                        "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest.assertTriggerWhenJobIsRunning",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsReconnected",
                        "io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest.assertMonitorWithDumpCommand",
                        "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenServerEnableWithoutLeader",
                        "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest.assertCronSettingChangedJobListenerWhenIsCronPathAndUpdateAndFindJob",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetShardingItemsWithEnabledServer",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForDisabledServer",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherFailoverInstanceCrashed",
                        "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest.assertTriggerWhenJobIsNotRunning",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsLost",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsOther",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForMultipleThreadsTest.assertJobInit",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeader",
                        "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest.assertListenServersChangedJobListenerWhenIsServerChange",
                        "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfNotLeaderAndReconcileServiceIsNotRunning",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsSameInstance",
                        "io.elasticjob.lite.integrate.std.script.ScriptElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItems",
                        "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest.assertMonitorWithCommand",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNotNecessary",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetLocalShardingItemsWithEnabledServer",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWhenHasLeader",
                    },
                    "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertRemoveLocalInstancePath": {
                        "io.elasticjob.lite.integrate.std.simple.DisabledJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNecessary",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForNotMonitorTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.simple.SimpleElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForInstanceShutdown",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetLocalShardingItemsWithDisabledServer",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWithLeader",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteThrowsExceptionTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherInstanceCrashed",
                        "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenRemoveLeaderInstancePathWithAvailableServer",
                        "io.elasticjob.lite.integrate.std.dataflow.OneOffDataflowElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertUpdateLocalInstancePath",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteFailureTest.assertJobInit",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForEnabledServer",
                        "io.elasticjob.lite.internal.instance.ShutdownListenerManagerTest.assertIsNotLocalInstancePath",
                        "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest.assertListenServersChangedJobListenerWhenIsInstanceChange",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetFailoverItems",
                        "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfLeaderAndReconcileServiceIsRunning",
                        "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest.assertTriggerWhenJobIsRunning",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsReconnected",
                        "io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest.assertMonitorWithDumpCommand",
                        "io.elasticjob.lite.internal.election.ElectionListenerManagerTest.assertLeaderElectionWhenServerEnableWithoutLeader",
                        "io.elasticjob.lite.internal.config.RescheduleListenerManagerTest.assertCronSettingChangedJobListenerWhenIsCronPathAndUpdateAndFindJob",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetShardingItemsWithEnabledServer",
                        "io.elasticjob.lite.internal.server.ServerServiceTest.assertPersistOnlineForDisabledServer",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsOtherFailoverInstanceCrashed",
                        "io.elasticjob.lite.internal.instance.TriggerListenerManagerTest.assertTriggerWhenJobIsNotRunning",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsLost",
                        "io.elasticjob.lite.internal.listener.RegistryCenterConnectionStateListenerTest.assertConnectionLostListenerWhenConnectionStateIsOther",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForMultipleThreadsTest.assertJobInit",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeader",
                        "io.elasticjob.lite.internal.sharding.ShardingListenerManagerTest.assertListenServersChangedJobListenerWhenIsServerChange",
                        "io.elasticjob.lite.internal.schedule.SchedulerFacadeTest.assertShutdownInstanceIfNotLeaderAndReconcileServiceIsNotRunning",
                        "io.elasticjob.lite.internal.failover.FailoverListenerManagerTest.assertJobCrashedJobListenerWhenIsSameInstance",
                        "io.elasticjob.lite.integrate.std.script.ScriptElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItems",
                        "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest.assertMonitorWithCommand",
                        "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertFailoverLeaderExecutionCallbackIfNotNecessary",
                        "io.elasticjob.lite.internal.sharding.ShardingServiceTest.assertGetLocalShardingItemsWithEnabledServer",
                        "io.elasticjob.lite.internal.election.LeaderServiceTest.assertIsLeaderUntilBlockWhenHasLeader",
                    },
                },
                "io.elasticjob.lite.internal.schedule.JobRegistryTest.assertGetCurrentShardingTotalCountIfNull": {
                    "io.elasticjob.lite.internal.schedule.JobRegistryTest.assertGetCurrentShardingTotalCountIfNotNull": {
                        "io.elasticjob.lite.integrate.std.simple.DisabledJobTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForNotMonitorTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.simple.SimpleElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.script.ScriptElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.internal.monitor.MonitorServiceEnableTest.assertMonitorWithCommand",
                        "io.elasticjob.lite.internal.monitor.MonitorServiceDisableTest.assertMonitorWithDumpCommand",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteThrowsExceptionTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.dataflow.OneOffDataflowElasticJobTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForMultipleThreadsTest.assertJobInit",
                        "io.elasticjob.lite.integrate.std.dataflow.StreamingDataflowElasticJobForExecuteFailureTest.assertJobInit",
                    }
                },
            },
            "victims": {
                "io.elasticjob.lite.internal.schedule.JobRegistryTest.assertGetCurrentShardingTotalCountIfNull",
                "io.elasticjob.lite.reg.zookeeper.ZookeeperRegistryCenterModifyTest.assertPersistEphemeralSequential",
                "io.elasticjob.lite.internal.failover.FailoverServiceTest.assertGetLocalFailoverItemsIfShutdown",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/jhipster/jhipster-registry.git": {
        "sha": "00db36611da5fc7aaf9d5372aa90f2465d80c0c4",
        "NA": {
            "methods": {
                "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processMethodNotSupportedExceptionTest",
                "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processParameterizedValidationErrorTest",
                "io.github.jhipster.registry.web.rest.UserJWTControllerTest.getIdTokenTest",
                "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processRuntimeExceptionTest",
                "io.github.jhipster.registry.web.rest.AccountResourceTest.testGetExistingAccount",
                "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processAccessDeniedExceptionTest",
                "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processValidationErrorTest",
                "io.github.jhipster.registry.web.rest.UserJWTControllerTest.badCredentials",
                "io.github.jhipster.registry.web.rest.AccountResourceTest.testGetUnknownAccount",
                "io.github.jhipster.registry.web.rest.UserJWTControllerTest.setIdTokenTest",
                "io.github.jhipster.registry.web.rest.UserJWTControllerTest.normalAuthentication",
                "io.github.jhipster.registry.web.rest.UserJWTControllerTest.authenticationException",
            },
            "polluters": {
                "io.github.jhipster.registry.web.rest.AccountResourceTest.testGetUnknownAccount": {
                    "io.github.jhipster.registry.web.rest.AccountResourceTest.testGetExistingAccount",
                    "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processAccessDeniedExceptionTest",
                    "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processRuntimeExceptionTest",
                    "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processParameterizedValidationErrorTest",
                }
            },
            "cleaners": {
                "io.github.jhipster.registry.web.rest.AccountResourceTest.testGetUnknownAccount": {
                    "io.github.jhipster.registry.web.rest.AccountResourceTest.testGetExistingAccount": {
                        "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processMethodNotSupportedExceptionTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.getIdTokenTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.badCredentials",
                        "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processValidationErrorTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.setIdTokenTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.normalAuthentication",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.authenticationException",
                    },
                    "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processAccessDeniedExceptionTest": {
                        "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processMethodNotSupportedExceptionTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.getIdTokenTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.badCredentials",
                        "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processValidationErrorTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.setIdTokenTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.normalAuthentication",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.authenticationException",
                    },
                    "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processParameterizedValidationErrorTest": {
                        "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processMethodNotSupportedExceptionTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.getIdTokenTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.badCredentials",
                        "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processValidationErrorTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.setIdTokenTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.normalAuthentication",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.authenticationException",
                    },
                    "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processRuntimeExceptionTest": {
                        "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processMethodNotSupportedExceptionTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.getIdTokenTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.badCredentials",
                        "io.github.jhipster.registry.web.rest.errors.ExceptionTranslatorTest.processValidationErrorTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.setIdTokenTest",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.normalAuthentication",
                        "io.github.jhipster.registry.web.rest.UserJWTControllerTest.authenticationException",
                    },
                }
            },
            "victims": {
                "io.github.jhipster.registry.web.rest.AccountResourceTest.testGetUnknownAccount"
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/ctco/cukes.git": {
        "sha": "b483e1a8f261b80a66291a42fc455256b0b5059c",
        "cukes-http": {
            "methods": {
                "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldReturnBodyWhenEnabledAndNoMax",
                "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldReturnBodyWhenEnabledWithMax",
                "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldNotReturnBodyWhenEnabledButContentTypeOctet",
                "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldNotReturnBodyWhenDisabled",
                "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldNotReturnBodyWhenEnabledButLongerThanMaxSize",
            },
            "polluters": {
                "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldReturnBodyWhenEnabledAndNoMax": {
                    "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldNotReturnBodyWhenEnabledButLongerThanMaxSize"
                }
            },
            "cleaners": {
                "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldReturnBodyWhenEnabledAndNoMax": {
                    "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldNotReturnBodyWhenEnabledButLongerThanMaxSize": {
                        "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldNotReturnBodyWhenDisabled",
                        "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldReturnBodyWhenEnabledWithMax",
                        "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldNotReturnBodyWhenEnabledButContentTypeOctet",
                    }
                }
            },
            "victims": {
                "lv.ctco.cukes.http.facade.HttpAssertionFacadeImplTest.shouldReturnBodyWhenEnabledAndNoMax"
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/ktuukkan/marine-api.git": {
        "sha": "af0003847db9ba822f67d4f1dceb8de3fe63250a",
        "NA": {
            "methods": {
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testParametrizedConstructor",
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreate",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testBasicListenerWithUnexpectedMessage",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testOnMessageWithExpectedMessage",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testConstructor",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithMixedOrder",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListener",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar",
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithIncorrectOrder",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListenerDefaultConstructorThrows",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListener",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithIncorrectOrder",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
            },
            "polluters": {
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testBasicListenerWithUnexpectedMessage": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testConstructor": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListener": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListenerDefaultConstructorThrows": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testOnMessageWithExpectedMessage": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testParametrizedConstructor": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListener": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithIncorrectOrder": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithMixedOrder": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreate": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithIncorrectOrder": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar"
                },
            },
            "cleaners": {
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testBasicListenerWithUnexpectedMessage": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testConstructor": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListener": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListenerDefaultConstructorThrows": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testOnMessageWithExpectedMessage": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testParametrizedConstructor": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListener": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithIncorrectOrder": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithMixedOrder": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreate": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithIncorrectOrder": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo": {
                    "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterParserWithAlternativeBeginChar": {
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithNull",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithEmptyString",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testHasParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithRandom",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testSupportedTypesRegistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceId",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testGetInstance",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testUnregisterParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyCustomParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testRegisterInvalidParser",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateParserWithUnregistered",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testCreateEmptyParserWithSentenceIdStr",
                        "net.sf.marineapi.nmea.parser.SentenceFactoryTest.testListParsers",
                    }
                },
            },
            "victims": {
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testOnMessageWithExpectedMessage",
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithIncorrectOrder",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testParametrizedConstructor",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testConstructor",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListenerDefaultConstructorThrows",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListener",
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreate",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithIncorrectOrder",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testSequenceListenerWithMixedOrder",
                "net.sf.marineapi.ais.parser.AISMessageFactoryTest.testCreateWithTwo",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testBasicListenerWithUnexpectedMessage",
                "net.sf.marineapi.ais.event.AbstractAISMessageListenerTest.testGenericsListener",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/fhoeben/hsac-fitnesse-fixtures.git": {
        "sha": "a64c18d9c4bac8271275c7b089d40be20f0604b5",
        "NA": {
            "methods": {
                "nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testCopyTo",
                "nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testTakeFirstLineFrom",
                "nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testDelete",
                "nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testAppendContainingOnSameline",
                "nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testAppendContainingOnNewline",
            },
            "polluters": {},
            "cleaners": {},
            "victims": set(),
            "brittles": {"nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testDelete"},
            "statesetters": {
                "nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testDelete": {
                    "nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testTakeFirstLineFrom",
                    "nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testAppendContainingOnSameline",
                    "nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testAppendContainingOnNewline",
                    "nl.hsac.fitnesse.fixture.slim.FileFixtureTest.testCopyTo",
                }
            },
        },
    },
    "https://github.com/Activiti/Activiti.git": {
        "sha": "b11f757a48600e53aaf3fcb7a3ba1ece6c463cb4",
        "activiti-spring-boot-starter": {
            "methods": {
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates",
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim",
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask",
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.dClaimTaskCreatedForGroup",
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.ctryCompletingWithUnauthorizedUser",
                "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.aCreateStandaloneTaskForSalaboy",
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.eClaimTaskCreatedForGroup",
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.aCreateStandaloneTaskAndComplete",
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.eCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
                "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup",
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.bCreateStandaloneTaskForGroup",
                "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.bClaimNotFoundBecauseYouAreNotACandidate",
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.bClaimAndRelease",
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.aCreateStandaloneTaskAndDelete",
            },
            "polluters": {
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.aCreateStandaloneTaskAndComplete": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.aCreateStandaloneTaskAndDelete": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.aCreateStandaloneTaskForSalaboy": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.bCreateStandaloneTaskForGroup": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup",
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                },
            },
            "cleaners": {
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.eClaimTaskCreatedForGroup",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.aCreateStandaloneTaskAndComplete": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.eClaimTaskCreatedForGroup",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.eClaimTaskCreatedForGroup",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.aCreateStandaloneTaskAndDelete": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.eClaimTaskCreatedForGroup",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.aCreateStandaloneTaskForSalaboy": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.eClaimTaskCreatedForGroup",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.bCreateStandaloneTaskForGroup": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.eClaimTaskCreatedForGroup",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.eClaimTaskCreatedForGroup",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.eClaimTaskCreatedForGroup",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.cCreateStandaloneTaskReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.eClaimTaskCreatedForGroup",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup": {
                        "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.fCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.gCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.cCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.dCleanUpWithAdmin",
                        "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.dCleanUpWithAdmin",
                    },
                },
            },
            "victims": {
                "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.bCreateStandaloneTaskForGroup",
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskForOtherTest.aCreateStandaloneTaskWithNoCandidates",
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.cCreateStandaloneTaskForGroupAndClaim",
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                "org.activiti.spring.boot.tasks.TaskRuntimeStandaloneTaskTest.aCreateStandaloneTaskForSalaboy",
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.aCreateStandaloneTaskAndComplete",
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask",
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee",
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail",
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.aCreateStandaloneTaskAndDelete",
            },
            "brittles": {
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.ctryCompletingWithUnauthorizedUser",
                "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.bClaimNotFoundBecauseYouAreNotACandidate",
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.bClaimAndRelease",
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.eCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.dClaimTaskCreatedForGroup",
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser",
            },
            "statesetters": {
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.bClaimAndRelease": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.eCreateStandaloneTaskAndClaimAndReleaseUnAuthorized": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.dCreateStandaloneTaskAndClaimAndReleaseUnAuthorized",
                    "org.activiti.spring.boot.tasks.TaskRuntimeClaimReleaseTest.aCreateStandaloneTaskForGroup",
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.ctryCompletingWithUnauthorizedUser": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeCompleteTaskTest.bCreateStandaloneTask"
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.dClaimTaskCreatedForGroup": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeDeleteTaskTest.cCreateStandaloneGroupTaskClaimAndDeleteFail"
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.bCreateCheckTaskCreatedForSalaboyFromAnotherUser": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeTaskAssigneeTest.aCreateStandaloneTaskForAnotherAssignee"
                },
                "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.bClaimNotFoundBecauseYouAreNotACandidate": {
                    "org.activiti.spring.boot.tasks.TaskRuntimeUnAuthorizedTest.aCreateStandaloneTaskForGroup"
                },
            },
        },
    },
    "https://github.com/apache/incubator-dubbo.git": {
        "sha": "737f7a7ea67832d7f17517326fb2491d0a086dd7",
        "dubbo-filter/dubbo-filter-cache": {
            "methods": {
                "org.apache.dubbo.cache.support.jcache.JCacheFactoryTest.testJCacheGetExpired",
                "org.apache.dubbo.cache.support.jcache.JCacheFactoryTest.testJCacheFactory",
            },
            "polluters": {
                "org.apache.dubbo.cache.support.jcache.JCacheFactoryTest.testJCacheGetExpired": {
                    "org.apache.dubbo.cache.support.jcache.JCacheFactoryTest.testJCacheFactory"
                }
            },
            "cleaners": {},
            "victims": {
                "org.apache.dubbo.cache.support.jcache.JCacheFactoryTest.testJCacheGetExpired"
            },
            "brittles": set(),
            "statesetters": {},
        },
        "dubbo-serialization/dubbo-serialization-fst": {
            "methods": {
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteNullBytes",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBytes",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteInt",
                "org.apache.dubbo.common.serialize.fst.FstObjectInputTest.testWrongClassInput",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteNullBytesWithSubLength",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBytesWithSubLength",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteFloat",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteUTF",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteByte",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteDouble",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteLong",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                "org.apache.dubbo.common.serialize.fst.FstObjectInputTest.testEmptyByteArrayForEmptyInput",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteShort",
                "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteEnum",
            },
            "polluters": {
                "org.apache.dubbo.common.serialize.fst.FstObjectInputTest.testEmptyByteArrayForEmptyInput": {
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteNullBytes",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBytes",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteInt",
                    "org.apache.dubbo.common.serialize.fst.FstObjectInputTest.testWrongClassInput",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteNullBytesWithSubLength",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBytesWithSubLength",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteUTF",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteByte",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteDouble",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteLong",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteFloat",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteShort",
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteEnum",
                }
            },
            "cleaners": {
                "org.apache.dubbo.common.serialize.fst.FstObjectInputTest.testEmptyByteArrayForEmptyInput": {
                    "org.apache.dubbo.common.serialize.fst.FstObjectInputTest.testWrongClassInput": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteByte": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBytes": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBytesWithSubLength": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteDouble": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteEnum": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteFloat": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteInt": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteLong": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteNullBytes": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteNullBytesWithSubLength": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteShort": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                    "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteUTF": {
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteBool",
                        "org.apache.dubbo.common.serialize.fst.FstObjectOutputTest.testWriteObject",
                    },
                }
            },
            "victims": {
                "org.apache.dubbo.common.serialize.fst.FstObjectInputTest.testEmptyByteArrayForEmptyInput"
            },
            "brittles": set(),
            "statesetters": {},
        },
        "dubbo-common": {
            "methods": {
                "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest.testRemoveAll",
                "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest.testRemove",
                "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest.testSetAndGet",
                "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest.testSize",
            },
            "polluters": {
                "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest.testSize": {
                    "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest.testRemoveAll",
                    "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest.testSetAndGet",
                    "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest.testRemove",
                }
            },
            "cleaners": {},
            "victims": {
                "org.apache.dubbo.common.threadlocal.InternalThreadLocalTest.testSize"
            },
            "brittles": set(),
            "statesetters": {},
        },
        "dubbo-config/dubbo-config-api": {
            "methods": {
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
            },
            "polluters": {},
            "cleaners": {},
            "victims": set(),
            "brittles": {
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
            },
            "statesetters": {
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
                "org.apache.dubbo.config.AbstractInterfaceConfigTest.testStub": {
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCallbacks",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLayer",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOnconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistry",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOwner",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testConnections",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testFilter",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testScope",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLocal",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethod3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testApplication",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCluster",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock6",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock4",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock3",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock8",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock5",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testModule",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testMonitor",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkInterfaceAndMethods1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testOndisconnect",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock7",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkApplication1",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testCheckRegistry2",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testLoadRegistries",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.checkStubAndMock9",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testListener",
                    "org.apache.dubbo.config.AbstractInterfaceConfigTest.testProxy",
                },
            },
        },
        "dubbo-cluster": {
            "methods": {
                "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testTimeoutExceptionCode",
                "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testClearRpcContext",
                "org.apache.dubbo.rpc.cluster.StickyTest.testStickyNoCheck",
                "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testBindingAttachment",
                "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_matchDefault",
                "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_requestWithoutTag_shouldNotDowngrade",
                "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeException",
                "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeNoException",
                "org.apache.dubbo.rpc.cluster.StickyTest.testStickyForceCheck",
                "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_requestWithTag_shouldDowngrade",
                "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_matchTag",
            },
            "polluters": {
                "org.apache.dubbo.rpc.cluster.StickyTest.testStickyNoCheck": {
                    "org.apache.dubbo.rpc.cluster.StickyTest.testStickyForceCheck"
                },
                "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testBindingAttachment": {
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_requestWithTag_shouldDowngrade",
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_matchDefault",
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_requestWithoutTag_shouldNotDowngrade",
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_matchTag",
                },
                "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testClearRpcContext": {
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_requestWithTag_shouldDowngrade",
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_matchDefault",
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_requestWithoutTag_shouldNotDowngrade",
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_matchTag",
                },
            },
            "cleaners": {
                "org.apache.dubbo.rpc.cluster.StickyTest.testStickyNoCheck": {
                    "org.apache.dubbo.rpc.cluster.StickyTest.testStickyForceCheck": {
                        "org.apache.dubbo.rpc.cluster.StickyTest.testStickyForceCheck"
                    }
                },
                "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testBindingAttachment": {
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_matchDefault": {
                        "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testTimeoutExceptionCode",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeNoException",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeException",
                    },
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_matchTag": {
                        "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testTimeoutExceptionCode",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeNoException",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeException",
                    },
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_requestWithoutTag_shouldNotDowngrade": {
                        "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testTimeoutExceptionCode",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeNoException",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeException",
                    },
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_requestWithTag_shouldDowngrade": {
                        "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testTimeoutExceptionCode",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeNoException",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeException",
                    },
                },
                "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testClearRpcContext": {
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_matchDefault": {
                        "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testTimeoutExceptionCode",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeNoException",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeException",
                    },
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_matchTag": {
                        "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testTimeoutExceptionCode",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeNoException",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeException",
                    },
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_requestWithoutTag_shouldNotDowngrade": {
                        "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testTimeoutExceptionCode",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeNoException",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeException",
                    },
                    "org.apache.dubbo.rpc.cluster.router.tag.TagRouterTest.testRoute_requestWithTag_shouldDowngrade": {
                        "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testTimeoutExceptionCode",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeNoException",
                        "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testInvokeException",
                    },
                },
            },
            "victims": {
                "org.apache.dubbo.rpc.cluster.support.ForkingClusterInvokerTest.testClearRpcContext",
                "org.apache.dubbo.rpc.cluster.StickyTest.testStickyNoCheck",
                "org.apache.dubbo.rpc.cluster.support.AbstractClusterInvokerTest.testBindingAttachment",
            },
            "brittles": set(),
            "statesetters": {},
        },
        "dubbo-rpc/dubbo-rpc-dubbo": {
            "methods": {
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangePath",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeMessageNull",
                "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_multi_destory",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDetail",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDetailService",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeName",
                "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_share_connect",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeCancel2",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testListClient",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testErrorMessage",
                "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future_Ex",
                "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_not_share_connect",
                "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_counter_error",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testInvaildMessage",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvaildMessage",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testList",
                "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_OnReturn",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testNoPort",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeServiceNotExport",
                "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_CloseCallback",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeCancel",
                "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest.testDubboProtocolMultiService",
                "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future_Multi",
                "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Normal_Ex",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeAutoFindMethod",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeSimpleName",
                "org.apache.dubbo.rpc.protocol.dubbo.RpcFilterTest.testRpcFilter",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeByPassingNullValue",
                "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListService",
                "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_OnInvoke",
                "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_Onthrow",
                "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest.testDubboProtocolWithMina",
                "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Sync_NoFuture",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDefault",
                "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Sync_Onreturn",
                "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest.testDubboProtocol",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testMessageNull",
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeDefaultSService",
            },
            "polluters": {
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeServiceNotExport": {
                    "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_share_connect",
                    "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_not_share_connect",
                    "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_multi_destory",
                    "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_counter_error",
                }
            },
            "cleaners": {
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeServiceNotExport": {
                    "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_counter_error": {
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangePath",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeMessageNull",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDetail",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDetailService",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeName",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeCancel2",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testListClient",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testErrorMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future_Ex",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testInvaildMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvaildMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testList",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_OnReturn",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testNoPort",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_CloseCallback",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeCancel",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future_Multi",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Normal_Ex",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeAutoFindMethod",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeSimpleName",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeByPassingNullValue",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListService",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_OnInvoke",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_Onthrow",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Sync_NoFuture",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDefault",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Sync_Onreturn",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testMessageNull",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeDefaultSService",
                    },
                    "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_multi_destory": {
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangePath",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeMessageNull",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDetail",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDetailService",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeName",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeCancel2",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testListClient",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testErrorMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future_Ex",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testInvaildMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvaildMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testList",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_OnReturn",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testNoPort",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_CloseCallback",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeCancel",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future_Multi",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Normal_Ex",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeAutoFindMethod",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeSimpleName",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeByPassingNullValue",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListService",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_OnInvoke",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_Onthrow",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Sync_NoFuture",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDefault",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Sync_Onreturn",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testMessageNull",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeDefaultSService",
                    },
                    "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_not_share_connect": {
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangePath",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeMessageNull",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDetail",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDetailService",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeName",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeCancel2",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testListClient",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testErrorMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future_Ex",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testInvaildMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvaildMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testList",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_OnReturn",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testNoPort",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_CloseCallback",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeCancel",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future_Multi",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Normal_Ex",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeAutoFindMethod",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeSimpleName",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeByPassingNullValue",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListService",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_OnInvoke",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_Onthrow",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Sync_NoFuture",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDefault",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Sync_Onreturn",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testMessageNull",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeDefaultSService",
                    },
                    "org.apache.dubbo.rpc.protocol.dubbo.ReferenceCountExchangeClientTest.test_share_connect": {
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangePath",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeMessageNull",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDetail",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDetailService",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeName",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeCancel2",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testListClient",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testErrorMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future_Ex",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testInvaildMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvaildMessage",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testList",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_OnReturn",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.PortTelnetHandlerTest.testNoPort",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_CloseCallback",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeCancel",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future_Multi",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Normal_Ex",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeAutoFindMethod",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeSimpleName",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeByPassingNullValue",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Async_Future",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListService",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_OnInvoke",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Ex_Onthrow",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Sync_NoFuture",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.ListTelnetHandlerTest.testListDefault",
                        "org.apache.dubbo.rpc.protocol.dubbo.ImplicitCallBackTest.test_Sync_Onreturn",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testMessageNull",
                        "org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokerTelnetHandlerTest.testInvokeDefaultSService",
                    },
                }
            },
            "victims": {
                "org.apache.dubbo.rpc.protocol.dubbo.telnet.ChangeTelnetHandlerTest.testChangeServiceNotExport"
            },
            "brittles": {
                "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest.testDubboProtocolWithMina"
            },
            "statesetters": {
                "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest.testDubboProtocolWithMina": {
                    "org.apache.dubbo.rpc.protocol.dubbo.RpcFilterTest.testRpcFilter",
                    "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest.testDubboProtocolMultiService",
                    "org.apache.dubbo.rpc.protocol.dubbo.DubboProtocolTest.testDubboProtocol",
                }
            },
        },
        "dubbo-rpc/dubbo-rpc-api": {
            "methods": {
                "org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactoryTest.testGetInvoker",
                "org.apache.dubbo.rpc.RpcContextTest.testGetContext",
                "org.apache.dubbo.rpc.filter.ExceptionFilterTest.testRpcException",
                "org.apache.dubbo.rpc.filter.ContextFilterTest.testSetContext",
                "org.apache.dubbo.rpc.RpcContextTest.testAsync",
                "org.apache.dubbo.rpc.proxy.jdk.JdkProxyFactoryTest.testGetInvoker",
                "org.apache.dubbo.rpc.filter.ContextFilterTest.testWithAttachments",
            },
            "polluters": {
                "org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactoryTest.testGetInvoker": {
                    "org.apache.dubbo.rpc.RpcContextTest.testAsync"
                },
                "org.apache.dubbo.rpc.proxy.jdk.JdkProxyFactoryTest.testGetInvoker": {
                    "org.apache.dubbo.rpc.RpcContextTest.testAsync"
                },
            },
            "cleaners": {
                "org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactoryTest.testGetInvoker": {
                    "org.apache.dubbo.rpc.RpcContextTest.testAsync": {
                        "org.apache.dubbo.rpc.filter.ExceptionFilterTest.testRpcException",
                        "org.apache.dubbo.rpc.RpcContextTest.testGetContext",
                        "org.apache.dubbo.rpc.filter.ContextFilterTest.testSetContext",
                        "org.apache.dubbo.rpc.filter.ContextFilterTest.testWithAttachments",
                    }
                },
                "org.apache.dubbo.rpc.proxy.jdk.JdkProxyFactoryTest.testGetInvoker": {
                    "org.apache.dubbo.rpc.RpcContextTest.testAsync": {
                        "org.apache.dubbo.rpc.filter.ExceptionFilterTest.testRpcException",
                        "org.apache.dubbo.rpc.RpcContextTest.testGetContext",
                        "org.apache.dubbo.rpc.filter.ContextFilterTest.testSetContext",
                        "org.apache.dubbo.rpc.filter.ContextFilterTest.testWithAttachments",
                    }
                },
            },
            "victims": {
                "org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactoryTest.testGetInvoker",
                "org.apache.dubbo.rpc.proxy.jdk.JdkProxyFactoryTest.testGetInvoker",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/apache/hadoop.git": {
        "sha": "cc2babc1f75c93bf89a8f10da525f944c15d02ea",
        "hadoop-hdfs-project/hadoop-hdfs-nfs": {
            "methods": {
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRename",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRemove",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestWrites.testOOOWrites",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testReadlink",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testGetattr",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testMkdir",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testFsinfo",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testSetattr",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testPathconf",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRead",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testWrongNfsAccess",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testSymlink",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testCommit",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsWriteNN1",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsWriteNN2",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testReaddir",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testCreate",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsAccessNN1",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testLookup",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testWrite",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testFsstat",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestWrites.testWriteStableHow",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestWrites.testOverlappingWrites",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testAccess",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testReaddirplus",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsRenameSingleNN",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRmdir",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsAccessNN2",
            },
            "polluters": {
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testAccess": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testCommit": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testCreate": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testFsinfo": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testFsstat": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testGetattr": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testLookup": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testMkdir": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testPathconf": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRead": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testReaddir": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testReaddirplus": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testReadlink": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRemove": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRename": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRmdir": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testSetattr": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testSymlink": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testWrite": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsAccessNN1": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsAccessNN2": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsRenameSingleNN": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsWriteNN1": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsWriteNN2": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testWrongNfsAccess": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure"
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestWrites.testOOOWrites": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestWrites.testOverlappingWrites": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
                "org.apache.hadoop.hdfs.nfs.nfs3.TestWrites.testWriteStableHow": {
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessPrivilege.testClientAccessPrivilegeForRemove",
                    "org.apache.hadoop.hdfs.nfs.nfs3.TestDFSClientCache.testGetUserGroupInformationSecure",
                },
            },
            "cleaners": {},
            "victims": {
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRename",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRemove",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestWrites.testOOOWrites",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testReadlink",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testGetattr",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testMkdir",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testFsinfo",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testSetattr",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testPathconf",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRead",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testWrongNfsAccess",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testSymlink",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testCommit",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsWriteNN1",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsWriteNN2",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testReaddir",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testCreate",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsAccessNN1",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testLookup",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testWrite",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testFsstat",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestWrites.testWriteStableHow",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestWrites.testOverlappingWrites",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testAccess",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testReaddirplus",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsRenameSingleNN",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestRpcProgramNfs3.testRmdir",
                "org.apache.hadoop.hdfs.nfs.nfs3.TestViewfsWithNfs3.testNfsAccessNN2",
            },
            "brittles": set(),
            "statesetters": {},
        },
        "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core": {
            "methods": {
                "org.apache.hadoop.mapred.TestTaskProgressReporter.testScratchDirSize",
                "org.apache.hadoop.mapred.TestTaskProgressReporter.testBytesWrittenRespectingLimit",
                "org.apache.hadoop.mapred.TestTaskProgressReporter.testTaskProgress",
            },
            "polluters": {
                "org.apache.hadoop.mapred.TestTaskProgressReporter.testTaskProgress": {
                    "org.apache.hadoop.mapred.TestTaskProgressReporter.testScratchDirSize",
                    "org.apache.hadoop.mapred.TestTaskProgressReporter.testBytesWrittenRespectingLimit",
                }
            },
            "cleaners": {},
            "victims": {
                "org.apache.hadoop.mapred.TestTaskProgressReporter.testTaskProgress"
            },
            "brittles": set(),
            "statesetters": {},
        },
        "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app": {
            "methods": {
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testBatchedFlushJobEndMultiplier",
                "org.apache.hadoop.mapreduce.v2.app.TestStagingCleanup.testDeletionofStagingOnKill",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesNotLastAMRetry",
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterFailLock",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testPreviousJobIsNotCleanedWhenRecovery",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryFailsUsingCustomOutputCommitter",
                "org.apache.hadoop.mapreduce.v2.app.TestJobEndNotifier.testNotificationOnLastRetryShutdownWithRuntimeException",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteThrows",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteFailed",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSetTrackingURLAfterHistoryIsWritten",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testFirstFlushOnCompletionEvent",
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterSuccessLock",
                "org.apache.hadoop.mapreduce.v2.app.TestFetchFailure.testFetchFailureWithRecovery",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testCrashed",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testMaxUnflushedCompletionEvents",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testOutputRecovery",
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterMidLock",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testTimelineEventHandling",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithOldCommiter",
                "org.apache.hadoop.mapreduce.v2.app.TestAMInfos.testAMInfosWithoutRecoveryEnabled",
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterJobLaunchTime",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSigTermedFunctionality",
                "org.apache.hadoop.mapreduce.v2.app.TestMRApp.testUpdatedNodes",
                "org.apache.hadoop.mapreduce.v2.app.TestStagingCleanup.testNoDeletionofStagingOnReboot",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesOnLastAMRetry",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testUnflushedTimer",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testCountersToJSON",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testAMStartedEvent",
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppComponentDependencies.testComponentStopOrder",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testOutputRecoveryMapsOnly",
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterShutDownJob",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testCrashOfMapsOnlyJob",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testMultipleCrashes",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithSpillEncryption",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testCountersToJSONEmpty",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoverySuccessUsingCustomOutputCommitter",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithoutShuffleSecret",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testSpeculative",
                "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testPropertyRedactionForJHS",
                "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testPreviousJobOutputCleanedWhenNoRecovery",
            },
            "polluters": {
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterFailLock": {
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testTimelineEventHandling",
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSigTermedFunctionality",
                },
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterMidLock": {
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testTimelineEventHandling",
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSigTermedFunctionality",
                },
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterShutDownJob": {
                    "org.apache.hadoop.mapreduce.v2.app.TestJobEndNotifier.testNotificationOnLastRetryShutdownWithRuntimeException"
                },
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterSuccessLock": {
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testTimelineEventHandling",
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSigTermedFunctionality",
                },
            },
            "cleaners": {
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterFailLock": {
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSigTermedFunctionality": {
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testBatchedFlushJobEndMultiplier",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesNotLastAMRetry",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testUnflushedTimer",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testAMStartedEvent",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteThrows",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteFailed",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSetTrackingURLAfterHistoryIsWritten",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testFirstFlushOnCompletionEvent",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testMaxUnflushedCompletionEvents",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testPropertyRedactionForJHS",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesOnLastAMRetry",
                    },
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testTimelineEventHandling": {
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testBatchedFlushJobEndMultiplier",
                        "org.apache.hadoop.mapreduce.v2.app.TestStagingCleanup.testDeletionofStagingOnKill",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesNotLastAMRetry",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testPreviousJobIsNotCleanedWhenRecovery",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryFailsUsingCustomOutputCommitter",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteThrows",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteFailed",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSetTrackingURLAfterHistoryIsWritten",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testFirstFlushOnCompletionEvent",
                        "org.apache.hadoop.mapreduce.v2.app.TestFetchFailure.testFetchFailureWithRecovery",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testCrashed",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testMaxUnflushedCompletionEvents",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testOutputRecovery",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithOldCommiter",
                        "org.apache.hadoop.mapreduce.v2.app.TestAMInfos.testAMInfosWithoutRecoveryEnabled",
                        "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterJobLaunchTime",
                        "org.apache.hadoop.mapreduce.v2.app.TestMRApp.testUpdatedNodes",
                        "org.apache.hadoop.mapreduce.v2.app.TestStagingCleanup.testNoDeletionofStagingOnReboot",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesOnLastAMRetry",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testUnflushedTimer",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testAMStartedEvent",
                        "org.apache.hadoop.mapreduce.v2.app.TestMRAppComponentDependencies.testComponentStopOrder",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testOutputRecoveryMapsOnly",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testMultipleCrashes",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testCrashOfMapsOnlyJob",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithSpillEncryption",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoverySuccessUsingCustomOutputCommitter",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithoutShuffleSecret",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testSpeculative",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testPropertyRedactionForJHS",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testPreviousJobOutputCleanedWhenNoRecovery",
                    },
                },
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterMidLock": {
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSigTermedFunctionality": {
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testBatchedFlushJobEndMultiplier",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesNotLastAMRetry",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testUnflushedTimer",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testAMStartedEvent",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteThrows",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteFailed",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSetTrackingURLAfterHistoryIsWritten",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testFirstFlushOnCompletionEvent",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testMaxUnflushedCompletionEvents",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testPropertyRedactionForJHS",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesOnLastAMRetry",
                    },
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testTimelineEventHandling": {
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testBatchedFlushJobEndMultiplier",
                        "org.apache.hadoop.mapreduce.v2.app.TestStagingCleanup.testDeletionofStagingOnKill",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesNotLastAMRetry",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testPreviousJobIsNotCleanedWhenRecovery",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryFailsUsingCustomOutputCommitter",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteThrows",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteFailed",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSetTrackingURLAfterHistoryIsWritten",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testFirstFlushOnCompletionEvent",
                        "org.apache.hadoop.mapreduce.v2.app.TestFetchFailure.testFetchFailureWithRecovery",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testCrashed",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testMaxUnflushedCompletionEvents",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testOutputRecovery",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithOldCommiter",
                        "org.apache.hadoop.mapreduce.v2.app.TestAMInfos.testAMInfosWithoutRecoveryEnabled",
                        "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterJobLaunchTime",
                        "org.apache.hadoop.mapreduce.v2.app.TestMRApp.testUpdatedNodes",
                        "org.apache.hadoop.mapreduce.v2.app.TestStagingCleanup.testNoDeletionofStagingOnReboot",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesOnLastAMRetry",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testUnflushedTimer",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testAMStartedEvent",
                        "org.apache.hadoop.mapreduce.v2.app.TestMRAppComponentDependencies.testComponentStopOrder",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testOutputRecoveryMapsOnly",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testMultipleCrashes",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testCrashOfMapsOnlyJob",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithSpillEncryption",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoverySuccessUsingCustomOutputCommitter",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithoutShuffleSecret",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testSpeculative",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testPropertyRedactionForJHS",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testPreviousJobOutputCleanedWhenNoRecovery",
                    },
                },
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterShutDownJob": {
                    "org.apache.hadoop.mapreduce.v2.app.TestJobEndNotifier.testNotificationOnLastRetryShutdownWithRuntimeException": {
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testBatchedFlushJobEndMultiplier",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testCountersToJSON",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesNotLastAMRetry",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testUnflushedTimer",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testTimelineEventHandling",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testAMStartedEvent",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteThrows",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteFailed",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSetTrackingURLAfterHistoryIsWritten",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSigTermedFunctionality",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testFirstFlushOnCompletionEvent",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testMaxUnflushedCompletionEvents",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testPropertyRedactionForJHS",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesOnLastAMRetry",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testCountersToJSONEmpty",
                    }
                },
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterSuccessLock": {
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSigTermedFunctionality": {
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testBatchedFlushJobEndMultiplier",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesNotLastAMRetry",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testUnflushedTimer",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testAMStartedEvent",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteThrows",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteFailed",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSetTrackingURLAfterHistoryIsWritten",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testFirstFlushOnCompletionEvent",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testMaxUnflushedCompletionEvents",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testPropertyRedactionForJHS",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesOnLastAMRetry",
                    },
                    "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testTimelineEventHandling": {
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testBatchedFlushJobEndMultiplier",
                        "org.apache.hadoop.mapreduce.v2.app.TestStagingCleanup.testDeletionofStagingOnKill",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesNotLastAMRetry",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testPreviousJobIsNotCleanedWhenRecovery",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryFailsUsingCustomOutputCommitter",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteThrows",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testDontSetTrackingURLIfHistoryWriteFailed",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testSetTrackingURLAfterHistoryIsWritten",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testFirstFlushOnCompletionEvent",
                        "org.apache.hadoop.mapreduce.v2.app.TestFetchFailure.testFetchFailureWithRecovery",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testCrashed",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testMaxUnflushedCompletionEvents",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testOutputRecovery",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithOldCommiter",
                        "org.apache.hadoop.mapreduce.v2.app.TestAMInfos.testAMInfosWithoutRecoveryEnabled",
                        "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterJobLaunchTime",
                        "org.apache.hadoop.mapreduce.v2.app.TestMRApp.testUpdatedNodes",
                        "org.apache.hadoop.mapreduce.v2.app.TestStagingCleanup.testNoDeletionofStagingOnReboot",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testProcessDoneFilesOnLastAMRetry",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testUnflushedTimer",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testAMStartedEvent",
                        "org.apache.hadoop.mapreduce.v2.app.TestMRAppComponentDependencies.testComponentStopOrder",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testOutputRecoveryMapsOnly",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testMultipleCrashes",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testCrashOfMapsOnlyJob",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithSpillEncryption",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoverySuccessUsingCustomOutputCommitter",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testRecoveryWithoutShuffleSecret",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testSpeculative",
                        "org.apache.hadoop.mapreduce.jobhistory.TestJobHistoryEventHandler.testPropertyRedactionForJHS",
                        "org.apache.hadoop.mapreduce.v2.app.TestRecovery.testPreviousJobOutputCleanedWhenNoRecovery",
                    },
                },
            },
            "victims": {
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterSuccessLock",
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterShutDownJob",
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterFailLock",
                "org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster.testMRAppMasterMidLock",
            },
            "brittles": set(),
            "statesetters": {},
        },
        "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs": {
            "methods": {
                "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryEvents.testAssignedQueue",
                "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryParsing.testHistoryParsing",
                "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryEvents.testEventsFlushOnStop",
                "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryParsing.testHistoryParsingForFailedAttempts",
                "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryEvents.testHistoryEvents",
            },
            "polluters": {
                "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryParsing.testHistoryParsing": {
                    "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryEvents.testHistoryEvents",
                    "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryEvents.testAssignedQueue",
                    "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryEvents.testEventsFlushOnStop",
                },
                "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryParsing.testHistoryParsingForFailedAttempts": {
                    "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryEvents.testHistoryEvents",
                    "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryEvents.testAssignedQueue",
                    "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryEvents.testEventsFlushOnStop",
                },
            },
            "cleaners": {},
            "victims": {
                "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryParsing.testHistoryParsingForFailedAttempts",
                "org.apache.hadoop.mapreduce.v2.hs.TestJobHistoryParsing.testHistoryParsing",
            },
            "brittles": set(),
            "statesetters": {},
        },
        "hadoop-common-project/hadoop-auth": {
            "methods": {
                "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthentication",
                "org.apache.hadoop.security.authentication.util.TestKerberosName.testRules",
                "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthenticationHttpClient",
                "org.apache.hadoop.security.authentication.server.TestAltKerberosAuthenticationHandler.testNonDefaultNonBrowserUserAgentAsNonBrowser",
                "org.apache.hadoop.security.authentication.util.TestKerberosUtil.testGetServerPrincipal",
                "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthenticationHttpClientPost",
                "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthenticationHttpClientPostWithMultiAuthHandler",
                "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthenticationPost",
                "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthenticationWithMultiAuthHandler",
            },
            "polluters": {
                "org.apache.hadoop.security.authentication.util.TestKerberosName.testRules": {
                    "org.apache.hadoop.security.authentication.util.TestKerberosUtil.testGetServerPrincipal"
                }
            },
            "cleaners": {
                "org.apache.hadoop.security.authentication.util.TestKerberosName.testRules": {
                    "org.apache.hadoop.security.authentication.util.TestKerberosUtil.testGetServerPrincipal": {
                        "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthentication",
                        "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthenticationHttpClient",
                        "org.apache.hadoop.security.authentication.server.TestAltKerberosAuthenticationHandler.testNonDefaultNonBrowserUserAgentAsNonBrowser",
                        "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthenticationHttpClientPost",
                        "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthenticationHttpClientPostWithMultiAuthHandler",
                        "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthenticationPost",
                        "org.apache.hadoop.security.authentication.client.TestKerberosAuthenticator.testAuthenticationWithMultiAuthHandler",
                    }
                }
            },
            "victims": {
                "org.apache.hadoop.security.authentication.util.TestKerberosName.testRules"
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/Apache/Struts.git": {
        "sha": "13d9053050c9e4fb2ef049db6a37d3f6eebf48fa",
        "plugins/portlet": {
            "methods": {
                "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
                "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testCopyValueStackFromEventToRenderPhase",
                "org.apache.struts2.components.PortletUrlRendererTest.testIsPortelModeChanged",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrl",
                "org.apache.struts2.components.PortletUrlRendererTest.testRenderUrlWithNamespace",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetPortletMode",
                "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testRestoreValueStackInRenderPhaseWhenNotProperPrg",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testActionUrl",
                "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithNoActionOrMethod",
                "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithNestedParam",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithMethod",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithTwoNestedParam",
                "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testDoNotRestoreValueStackInRenderPhaseWhenProperPrg",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetWindowState",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithQueryParams",
                "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testModeChangeUsingPortletWidgets",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testEnsureParamsAreStringArrays",
                "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
                "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testModeChangeUsingPortletWidgets",
                "org.apache.struts2.views.jsp.PortletUrlTagTest.testWhenPortletModeDiffersFromCurrentAndNoParametersAreSetRenderTheDefaults",
            },
            "polluters": {
                "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok": {
                    "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testModeChangeUsingPortletWidgets",
                    "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testModeChangeUsingPortletWidgets",
                },
                "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok": {
                    "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testModeChangeUsingPortletWidgets",
                    "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testModeChangeUsingPortletWidgets",
                },
                "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok": {
                    "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testModeChangeUsingPortletWidgets",
                    "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testModeChangeUsingPortletWidgets",
                },
                "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok": {
                    "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testModeChangeUsingPortletWidgets",
                    "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testModeChangeUsingPortletWidgets",
                },
            },
            "cleaners": {
                "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok": {
                    "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testModeChangeUsingPortletWidgets": {
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetPortletMode",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testDoNotRestoreValueStackInRenderPhaseWhenProperPrg",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testRestoreValueStackInRenderPhaseWhenNotProperPrg",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testActionUrl",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testWhenPortletModeDiffersFromCurrentAndNoParametersAreSetRenderTheDefaults",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testCopyValueStackFromEventToRenderPhase",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetWindowState",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithNoActionOrMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithQueryParams",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithNestedParam",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testEnsureParamsAreStringArrays",
                        "org.apache.struts2.components.PortletUrlRendererTest.testIsPortelModeChanged",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrl",
                        "org.apache.struts2.components.PortletUrlRendererTest.testRenderUrlWithNamespace",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithTwoNestedParam",
                    },
                    "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testModeChangeUsingPortletWidgets": {
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetPortletMode",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testDoNotRestoreValueStackInRenderPhaseWhenProperPrg",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testRestoreValueStackInRenderPhaseWhenNotProperPrg",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testActionUrl",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testWhenPortletModeDiffersFromCurrentAndNoParametersAreSetRenderTheDefaults",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testCopyValueStackFromEventToRenderPhase",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetWindowState",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithNoActionOrMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithQueryParams",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithNestedParam",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testEnsureParamsAreStringArrays",
                        "org.apache.struts2.components.PortletUrlRendererTest.testIsPortelModeChanged",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrl",
                        "org.apache.struts2.components.PortletUrlRendererTest.testRenderUrlWithNamespace",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithTwoNestedParam",
                    },
                },
                "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok": {
                    "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testModeChangeUsingPortletWidgets": {
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetPortletMode",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testDoNotRestoreValueStackInRenderPhaseWhenProperPrg",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testRestoreValueStackInRenderPhaseWhenNotProperPrg",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testActionUrl",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testWhenPortletModeDiffersFromCurrentAndNoParametersAreSetRenderTheDefaults",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testCopyValueStackFromEventToRenderPhase",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetWindowState",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithNoActionOrMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithQueryParams",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithNestedParam",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testEnsureParamsAreStringArrays",
                        "org.apache.struts2.components.PortletUrlRendererTest.testIsPortelModeChanged",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrl",
                        "org.apache.struts2.components.PortletUrlRendererTest.testRenderUrlWithNamespace",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithTwoNestedParam",
                    },
                    "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testModeChangeUsingPortletWidgets": {
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetPortletMode",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testDoNotRestoreValueStackInRenderPhaseWhenProperPrg",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testRestoreValueStackInRenderPhaseWhenNotProperPrg",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testActionUrl",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testWhenPortletModeDiffersFromCurrentAndNoParametersAreSetRenderTheDefaults",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testCopyValueStackFromEventToRenderPhase",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetWindowState",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithNoActionOrMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithQueryParams",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithNestedParam",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testEnsureParamsAreStringArrays",
                        "org.apache.struts2.components.PortletUrlRendererTest.testIsPortelModeChanged",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrl",
                        "org.apache.struts2.components.PortletUrlRendererTest.testRenderUrlWithNamespace",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithTwoNestedParam",
                    },
                },
                "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok": {
                    "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testModeChangeUsingPortletWidgets": {
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetPortletMode",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testDoNotRestoreValueStackInRenderPhaseWhenProperPrg",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testRestoreValueStackInRenderPhaseWhenNotProperPrg",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testActionUrl",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testWhenPortletModeDiffersFromCurrentAndNoParametersAreSetRenderTheDefaults",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testCopyValueStackFromEventToRenderPhase",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetWindowState",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithNoActionOrMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithQueryParams",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithNestedParam",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testEnsureParamsAreStringArrays",
                        "org.apache.struts2.components.PortletUrlRendererTest.testIsPortelModeChanged",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrl",
                        "org.apache.struts2.components.PortletUrlRendererTest.testRenderUrlWithNamespace",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithTwoNestedParam",
                    },
                    "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testModeChangeUsingPortletWidgets": {
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetPortletMode",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testDoNotRestoreValueStackInRenderPhaseWhenProperPrg",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testRestoreValueStackInRenderPhaseWhenNotProperPrg",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testActionUrl",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testWhenPortletModeDiffersFromCurrentAndNoParametersAreSetRenderTheDefaults",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testCopyValueStackFromEventToRenderPhase",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetWindowState",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithNoActionOrMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithQueryParams",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithNestedParam",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testEnsureParamsAreStringArrays",
                        "org.apache.struts2.components.PortletUrlRendererTest.testIsPortelModeChanged",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrl",
                        "org.apache.struts2.components.PortletUrlRendererTest.testRenderUrlWithNamespace",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithTwoNestedParam",
                    },
                },
                "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok": {
                    "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testModeChangeUsingPortletWidgets": {
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetPortletMode",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testDoNotRestoreValueStackInRenderPhaseWhenProperPrg",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testRestoreValueStackInRenderPhaseWhenNotProperPrg",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testActionUrl",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testWhenPortletModeDiffersFromCurrentAndNoParametersAreSetRenderTheDefaults",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testCopyValueStackFromEventToRenderPhase",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetWindowState",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithNoActionOrMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithQueryParams",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithNestedParam",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testEnsureParamsAreStringArrays",
                        "org.apache.struts2.components.PortletUrlRendererTest.testIsPortelModeChanged",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrl",
                        "org.apache.struts2.components.PortletUrlRendererTest.testRenderUrlWithNamespace",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithTwoNestedParam",
                    },
                    "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testModeChangeUsingPortletWidgets": {
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetPortletMode",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testDoNotRestoreValueStackInRenderPhaseWhenProperPrg",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testRestoreValueStackInRenderPhaseWhenNotProperPrg",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testActionUrl",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testWhenPortletModeDiffersFromCurrentAndNoParametersAreSetRenderTheDefaults",
                        "org.apache.struts2.portlet.interceptor.PortletStateInterceptorTest.testCopyValueStackFromEventToRenderPhase",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testSetWindowState",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithNoActionOrMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithQueryParams",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithNestedParam",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testEnsureParamsAreStringArrays",
                        "org.apache.struts2.components.PortletUrlRendererTest.testIsPortelModeChanged",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrl",
                        "org.apache.struts2.components.PortletUrlRendererTest.testRenderUrlWithNamespace",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testUrlWithMethod",
                        "org.apache.struts2.views.jsp.PortletUrlTagTest.testResourceUrlWithTwoNestedParam",
                    },
                },
            },
            "victims": {
                "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testRender_ok",
                "org.apache.struts2.portlet.dispatcher.Jsr168DispatcherTest.testProcessAction_ok",
                "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testProcessAction_ok",
                "org.apache.struts2.portlet.dispatcher.Jsr286DispatcherTest.testRender_ok",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/wildfly/wildfly.git": {
        "sha": "b19048b72669fc0e96665b1b125dc1fda21f5993",
        "naming": {
            "methods": {
                "org.jboss.as.naming.NamingContextTestCase.testLookupWithContinuation",
                "org.jboss.as.naming.NamingContextTestCase.testList",
                "org.jboss.as.naming.NamingContextTestCase.testRebind",
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testListBindings",
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testBind",
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireAllEvent",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testOnlyExternalContextAllowsCache",
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireObjectEvent",
                "org.jboss.as.naming.NamingContextTestCase.testLookupLink",
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireMultiLevelEvent",
                "org.jboss.as.naming.ObjectFactoryTestCase.testBindAndRetrieveObjectFactoryFromInitialContext",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testCompositeBindingOps",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testSubsystem",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testRejectionsEAP7",
                "org.jboss.as.naming.NamingContextTestCase.testListBindingsNameNotFound",
                "org.jboss.as.naming.InitialContextTestCase.testRegisterURLSchemeHandler",
                "org.jboss.as.naming.ObjectFactoryTestCase.testBindAndRetrieveObjectFactoryFromNamingContext",
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireOneLevelEvent",
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireSubTreeEvent",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testRejectionsEAP6",
                "org.jboss.as.naming.NamingContextTestCase.testBindReferenceable",
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testStoredContext",
                "org.jboss.as.naming.NamingContextTestCase.testLookup",
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testLookupBinding",
                "org.jboss.as.naming.InitialContextFactoryTestCase.testInitialFactory",
                "org.jboss.as.naming.NamingContextTestCase.testListBindings",
                "org.jboss.as.naming.NamingContextTestCase.testLookupNameNotFound",
                "org.jboss.as.naming.NamingContextTestCase.testLookupEmptyName",
                "org.jboss.as.naming.NamingContextTestCase.testLookupReference",
                "org.jboss.as.naming.NamingContextTestCase.testUnbind",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testCompositeBindingUpdate",
                "org.jboss.as.naming.NamingContextTestCase.testListNameNotFound",
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testLookupBindingUsingNestedContext",
                "org.jboss.as.naming.NamingContextTestCase.testLookupWitResolveResult",
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testBindNested",
                "org.jboss.as.naming.NamingContextTestCase.testRebindReferenceable",
                "org.jboss.as.naming.NamingContextTestCase.testCreateSubcontext",
                "org.jboss.as.naming.NamingContextTestCase.testBind",
                "org.jboss.as.naming.NamingContextTestCase.testListBindingsWithContinuation",
                "org.jboss.as.naming.NamingContextTestCase.testListWithContinuation",
                "org.jboss.as.naming.NamingContextTestCase.testLookupContextLink",
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testRebind",
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions",
                "org.jboss.as.naming.InitialContextFactoryTestCase.testJavaContext",
            },
            "polluters": {
                "org.jboss.as.naming.InitialContextFactoryTestCase.testInitialFactory": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.InitialContextFactoryTestCase.testJavaContext": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.InitialContextTestCase.testRegisterURLSchemeHandler": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testBind": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testBindReferenceable": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testCreateSubcontext": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testList": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testListBindings": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testListBindingsNameNotFound": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testListBindingsWithContinuation": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testListNameNotFound": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testListWithContinuation": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testLookup": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testLookupContextLink": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testLookupEmptyName": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testLookupLink": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testLookupNameNotFound": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testLookupReference": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testLookupWithContinuation": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testLookupWitResolveResult": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testRebind": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testRebindReferenceable": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingContextTestCase.testUnbind": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireAllEvent": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireMultiLevelEvent": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireObjectEvent": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireOneLevelEvent": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireSubTreeEvent": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.ObjectFactoryTestCase.testBindAndRetrieveObjectFactoryFromInitialContext": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.ObjectFactoryTestCase.testBindAndRetrieveObjectFactoryFromNamingContext": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testListBindings": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testLookupBinding": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testLookupBindingUsingNestedContext": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testStoredContext": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testCompositeBindingOps": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testCompositeBindingUpdate": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testOnlyExternalContextAllowsCache": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testRejectionsEAP6": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testRejectionsEAP7": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testBind": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testBindNested": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testRebind": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testSubsystem": {
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
                },
            },
            "cleaners": {},
            "victims": {
                "org.jboss.as.naming.NamingContextTestCase.testLookupWithContinuation",
                "org.jboss.as.naming.NamingContextTestCase.testList",
                "org.jboss.as.naming.NamingContextTestCase.testRebind",
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testListBindings",
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testBind",
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireAllEvent",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testOnlyExternalContextAllowsCache",
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireObjectEvent",
                "org.jboss.as.naming.NamingContextTestCase.testLookupLink",
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireMultiLevelEvent",
                "org.jboss.as.naming.ObjectFactoryTestCase.testBindAndRetrieveObjectFactoryFromInitialContext",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testCompositeBindingOps",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testSubsystem",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testRejectionsEAP7",
                "org.jboss.as.naming.NamingContextTestCase.testListBindingsNameNotFound",
                "org.jboss.as.naming.InitialContextTestCase.testRegisterURLSchemeHandler",
                "org.jboss.as.naming.ObjectFactoryTestCase.testBindAndRetrieveObjectFactoryFromNamingContext",
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireOneLevelEvent",
                "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireSubTreeEvent",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testRejectionsEAP6",
                "org.jboss.as.naming.NamingContextTestCase.testBindReferenceable",
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testStoredContext",
                "org.jboss.as.naming.NamingContextTestCase.testLookup",
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testLookupBinding",
                "org.jboss.as.naming.InitialContextFactoryTestCase.testInitialFactory",
                "org.jboss.as.naming.NamingContextTestCase.testListBindings",
                "org.jboss.as.naming.NamingContextTestCase.testLookupNameNotFound",
                "org.jboss.as.naming.NamingContextTestCase.testLookupEmptyName",
                "org.jboss.as.naming.NamingContextTestCase.testLookupReference",
                "org.jboss.as.naming.NamingContextTestCase.testUnbind",
                "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testCompositeBindingUpdate",
                "org.jboss.as.naming.NamingContextTestCase.testListNameNotFound",
                "org.jboss.as.naming.ServiceBasedNamingStoreTestCase.testLookupBindingUsingNestedContext",
                "org.jboss.as.naming.NamingContextTestCase.testLookupWitResolveResult",
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testBindNested",
                "org.jboss.as.naming.NamingContextTestCase.testRebindReferenceable",
                "org.jboss.as.naming.NamingContextTestCase.testCreateSubcontext",
                "org.jboss.as.naming.NamingContextTestCase.testBind",
                "org.jboss.as.naming.NamingContextTestCase.testListBindingsWithContinuation",
                "org.jboss.as.naming.NamingContextTestCase.testListWithContinuation",
                "org.jboss.as.naming.NamingContextTestCase.testLookupContextLink",
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testRebind",
                "org.jboss.as.naming.InitialContextFactoryTestCase.testJavaContext",
            },
            "brittles": {
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions"
            },
            "statesetters": {
                "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testPermissions": {
                    "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireMultiLevelEvent",
                    "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testCompositeBindingOps",
                    "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testRejectionsEAP6",
                    "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testSubsystem",
                    "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testRejectionsEAP7",
                    "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testCompositeBindingUpdate",
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testBind",
                    "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireAllEvent",
                    "org.jboss.as.naming.subsystem.NamingSubsystemTestCase.testOnlyExternalContextAllowsCache",
                    "org.jboss.as.naming.WritableServiceBasedNamingStoreTestCase.testBindNested",
                    "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireOneLevelEvent",
                    "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireSubTreeEvent",
                    "org.jboss.as.naming.NamingEventCoordinatorTestCase.testFireObjectEvent",
                }
            },
        },
        "security/subsystem": {
            "methods": {
                "org.jboss.as.security.SecurityTransformersTestCase.testSubsystem",
                "org.jboss.as.security.SecurityDomainModelv20UnitTestCase.testSchema",
                "org.jboss.as.security.SecurityDomainModelv20UnitTestCase.testSubsystem",
                "org.jboss.as.security.SecurityDomainModelv12UnitTestCase.testSchema",
                "org.jboss.as.security.SecurityDomainModelv12UnitTestCase.testSubsystem",
                "org.jboss.as.security.SecurityDomainModelv11UnitTestCase.testSchema",
                "org.jboss.as.security.SecurityDomainModelv11UnitTestCase.testSubsystem",
                "org.jboss.as.security.JSSEExpressionsUnitTestCase.testSchema",
                "org.jboss.as.security.JSSEExpressionsUnitTestCase.testSubsystem",
            },
            "polluters": {},
            "cleaners": {},
            "victims": set(),
            "brittles": {
                "org.jboss.as.security.SecurityDomainModelv12UnitTestCase.testSubsystem"
            },
            "statesetters": {
                "org.jboss.as.security.SecurityDomainModelv12UnitTestCase.testSubsystem": {
                    "org.jboss.as.security.SecurityTransformersTestCase.testSubsystem",
                    "org.jboss.as.security.SecurityDomainModelv20UnitTestCase.testSchema",
                    "org.jboss.as.security.SecurityDomainModelv20UnitTestCase.testSubsystem",
                    "org.jboss.as.security.SecurityDomainModelv12UnitTestCase.testSchema",
                    "org.jboss.as.security.SecurityDomainModelv11UnitTestCase.testSchema",
                    "org.jboss.as.security.SecurityDomainModelv11UnitTestCase.testSubsystem",
                    "org.jboss.as.security.JSSEExpressionsUnitTestCase.testSchema",
                    "org.jboss.as.security.JSSEExpressionsUnitTestCase.testSubsystem",
                }
            },
        },
    },
    "https://github.com/spring-projects/spring-boot.git": {
        "sha": "daa3d457b71896a758995c264977bdd1414ee4d4",
        "spring-boot-project/spring-boot-actuator-autoconfigure": {
            "methods": {
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsWithRestrictedAccess",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.operationWithSecurityInterceptorSuccess",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryMvcWebEndpointIntegrationTests.operationWithSecurityInterceptorSuccess",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsWithFullAccess",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsForbidden",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.operationWithSecurityInterceptorForbidden",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryMvcWebEndpointIntegrationTests.operationWithSecurityInterceptorForbidden",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryMvcWebEndpointIntegrationTests.linksToOtherEndpointsForbidden",
            },
            "polluters": {
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsWithFullAccess": {
                    "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsForbidden"
                },
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsWithRestrictedAccess": {
                    "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsForbidden"
                },
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.operationWithSecurityInterceptorForbidden": {
                    "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsForbidden"
                },
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.operationWithSecurityInterceptorSuccess": {
                    "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsForbidden"
                },
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryMvcWebEndpointIntegrationTests.operationWithSecurityInterceptorForbidden": {
                    "org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryMvcWebEndpointIntegrationTests.linksToOtherEndpointsForbidden"
                },
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryMvcWebEndpointIntegrationTests.operationWithSecurityInterceptorSuccess": {
                    "org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryMvcWebEndpointIntegrationTests.linksToOtherEndpointsForbidden"
                },
            },
            "cleaners": {},
            "victims": {
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsWithRestrictedAccess",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.operationWithSecurityInterceptorSuccess",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryMvcWebEndpointIntegrationTests.operationWithSecurityInterceptorSuccess",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.linksToOtherEndpointsWithFullAccess",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.CloudFoundryWebFluxEndpointIntegrationTests.operationWithSecurityInterceptorForbidden",
                "org.springframework.boot.actuate.autoconfigure.cloudfoundry.servlet.CloudFoundryMvcWebEndpointIntegrationTests.operationWithSecurityInterceptorForbidden",
            },
            "brittles": set(),
            "statesetters": {},
        },
        "spring-boot-project/spring-boot": {
            "methods": {
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.loggingThatUsesJulIsCaptured",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.getLoggingConfigurations",
                "org.springframework.boot.logging.java.JavaLoggingSystemTests.setLevel",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.testNonDefaultConfigLocation",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.setLevel",
                "org.springframework.boot.logging.java.JavaLoggingSystemTests.testSystemPropertyInitializesFormat",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.customExceptionConversionWord",
                "org.springframework.boot.logging.java.JavaLoggingSystemTests.testNonDefaultConfigLocation",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.exceptionsIncludeClassPackaging",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.getLoggingConfiguration",
                "org.springframework.boot.SpringApplicationTests.enableBannerInLogViaProperty",
                "org.springframework.boot.logging.java.JavaLoggingSystemTests.testCustomFormatter",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.beforeInitializeFilterDisablesErrorLogging",
                "org.springframework.boot.logging.java.JavaLoggingSystemTests.noFile",
                "org.springframework.boot.logging.java.JavaLoggingSystemTests.getLoggingConfiguration",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.initializationIsOnlyPerformedOnceUntilCleanedUp",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.setLevelToNull",
                "org.springframework.boot.logging.java.JavaLoggingSystemTests.getLoggingConfigurations",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.setLevelOfUnconfiguredLoggerDoesNotAffectRootConfiguration",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.withFile",
                "org.springframework.boot.logging.java.JavaLoggingSystemTests.setLevelToNull",
                "org.springframework.boot.logging.java.JavaLoggingSystemTests.withFile",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.noFile",
            },
            "polluters": {
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.loggingThatUsesJulIsCaptured": {
                    "org.springframework.boot.logging.java.JavaLoggingSystemTests.withFile"
                },
                "org.springframework.boot.SpringApplicationTests.enableBannerInLogViaProperty": {
                    "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.testNonDefaultConfigLocation"
                },
            },
            "cleaners": {
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.loggingThatUsesJulIsCaptured": {
                    "org.springframework.boot.logging.java.JavaLoggingSystemTests.withFile": {
                        "org.springframework.boot.logging.java.JavaLoggingSystemTests.getLoggingConfiguration",
                        "org.springframework.boot.logging.java.JavaLoggingSystemTests.testSystemPropertyInitializesFormat",
                        "org.springframework.boot.logging.java.JavaLoggingSystemTests.setLevelToNull",
                        "org.springframework.boot.logging.java.JavaLoggingSystemTests.setLevel",
                        "org.springframework.boot.logging.java.JavaLoggingSystemTests.testNonDefaultConfigLocation",
                        "org.springframework.boot.logging.java.JavaLoggingSystemTests.getLoggingConfigurations",
                        "org.springframework.boot.logging.java.JavaLoggingSystemTests.testCustomFormatter",
                        "org.springframework.boot.logging.java.JavaLoggingSystemTests.noFile",
                    }
                },
                "org.springframework.boot.SpringApplicationTests.enableBannerInLogViaProperty": {
                    "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.testNonDefaultConfigLocation": {
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.withFile",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.initializationIsOnlyPerformedOnceUntilCleanedUp",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.getLoggingConfigurations",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.customExceptionConversionWord",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.loggingThatUsesJulIsCaptured",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.exceptionsIncludeClassPackaging",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.setLevelToNull",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.setLevel",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.setLevelOfUnconfiguredLoggerDoesNotAffectRootConfiguration",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.noFile",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.getLoggingConfiguration",
                        "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.beforeInitializeFilterDisablesErrorLogging",
                    }
                },
            },
            "victims": {
                "org.springframework.boot.SpringApplicationTests.enableBannerInLogViaProperty",
                "org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests.loggingThatUsesJulIsCaptured",
            },
            "brittles": set(),
            "statesetters": {},
        },
        "spring-boot-project/spring-boot-test-autoconfigure": {
            "methods": {
                "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverCustomScopeIntegrationTests.shouldBeTheSameWebClient",
                "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverCustomScopeIntegrationTests.shouldAutoConfigureWebClient",
                "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverIntegrationTests.shouldAutoConfigureWebClient",
                "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverIntegrationTests.shouldBeADifferentWebClient",
            },
            "polluters": {},
            "cleaners": {},
            "victims": set(),
            "brittles": {
                "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverCustomScopeIntegrationTests.shouldBeTheSameWebClient",
                "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverIntegrationTests.shouldBeADifferentWebClient",
            },
            "statesetters": {
                "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverCustomScopeIntegrationTests.shouldBeTheSameWebClient": {
                    "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverCustomScopeIntegrationTests.shouldAutoConfigureWebClient"
                },
                "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverIntegrationTests.shouldBeADifferentWebClient": {
                    "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.WebMvcTestWebDriverIntegrationTests.shouldAutoConfigureWebClient"
                },
            },
        },
        "spring-boot-project/spring-boot-test": {
            "methods": {
                "org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListenerTests.test002",
                "org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListenerTests.test001",
            },
            "polluters": {},
            "cleaners": {},
            "victims": set(),
            "brittles": {
                "org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListenerTests.test002"
            },
            "statesetters": {
                "org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListenerTests.test002": {
                    "org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListenerTests.test001"
                }
            },
        },
    },
    "https://github.com/hexagonframework/spring-data-ebean.git": {
        "sha": "dd11b97654982403b50dd1d5369cadad71fce410",
        "NA": {
            "methods": {
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_example_sort",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.testFindByMethodName",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.count_example",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.deleteAll",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.updateAll",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.sqlUpdateOf",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.deleteById",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.delete",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findById",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.testAuditable",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_pageable",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findByProperty",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_example",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_example",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.existsById",
                "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.applyQueryObject",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_example_sort",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.queryAndMethod",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.updateQuery",
                "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.createNamedQuery",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAllByProperty",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findById_fetchPath",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_pageable",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAllById",
                "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.createSqlQueryMappingColumns",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findByProperty_fetchPath",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.save",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findUserByEmailAddressEqualsOql_pageable",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAllByProperty_fetchPath",
                "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.createNamedDtoQuery",
                "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.query_queryObject",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.count",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.update",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.deleteAll_entities",
                "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.createDtoQuery",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.testDomainEvent",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_example_pageable",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_sort",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.exists_example",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAllByProperty_fetchPath_sort",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_example_pageable",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.saveAll",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findOne_example",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_ids",
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_sort",
                "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.createNamedQueryWhere",
            },
            "polluters": {},
            "cleaners": {},
            "victims": set(),
            "brittles": {
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.deleteById"
            },
            "statesetters": {
                "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.deleteById": {
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_example_sort",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.testFindByMethodName",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.count_example",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.deleteAll",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.updateAll",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.sqlUpdateOf",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.testAuditable",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.delete",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findById",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_pageable",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findByProperty",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_example",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_example",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.existsById",
                    "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.applyQueryObject",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_example_sort",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.queryAndMethod",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.updateQuery",
                    "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.createNamedQuery",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAllByProperty",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findById_fetchPath",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_pageable",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAllById",
                    "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.createSqlQueryMappingColumns",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findByProperty_fetchPath",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.save",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findUserByEmailAddressEqualsOql_pageable",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAllByProperty_fetchPath",
                    "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.createNamedDtoQuery",
                    "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.query_queryObject",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.count",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.update",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.deleteAll_entities",
                    "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.createDtoQuery",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.testDomainEvent",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_example_pageable",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_sort",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.exists_example",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAllByProperty_fetchPath_sort",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_example_pageable",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.saveAll",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findOne_example",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_fetchPath_ids",
                    "org.springframework.data.ebean.repository.UserRepositoryIntegrationTest.findAll_sort",
                    "org.springframework.data.ebean.querychannel.EbeanQueryChannelServiceIntegrationTest.createNamedQueryWhere",
                }
            },
        },
    },
    "https://github.com/spring-projects/spring-data-envers.git": {
        "sha": "5637994be37747e82b2d6d5b34555e2bee791fe6",
        "NA": {
            "methods": {
                "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.findsDeletedRevisions",
                "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.considersRevisionNumberSortOrder",
                "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.shortCurcuitingWhenOffsetIsToLarge",
                "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.returnsEmptyRevisionsForUnrevisionedEntity",
                "org.springframework.data.envers.repository.support.QueryDslRepositoryIntegrationTests.testWithQueryDsl",
                "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.testLifeCycle",
                "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.returnsParticularRevisionForAnEntity",
                "org.springframework.data.envers.repository.support.QueryDslRepositoryIntegrationTests.testWithRevisions",
            },
            "polluters": {
                "org.springframework.data.envers.repository.support.QueryDslRepositoryIntegrationTests.testWithQueryDsl": {
                    "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.testLifeCycle"
                },
                "org.springframework.data.envers.repository.support.QueryDslRepositoryIntegrationTests.testWithRevisions": {
                    "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.testLifeCycle"
                },
            },
            "cleaners": {
                "org.springframework.data.envers.repository.support.QueryDslRepositoryIntegrationTests.testWithQueryDsl": {
                    "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.testLifeCycle": {
                        "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.findsDeletedRevisions",
                        "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.shortCurcuitingWhenOffsetIsToLarge",
                        "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.considersRevisionNumberSortOrder",
                        "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.returnsEmptyRevisionsForUnrevisionedEntity",
                        "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.returnsParticularRevisionForAnEntity",
                    }
                },
                "org.springframework.data.envers.repository.support.QueryDslRepositoryIntegrationTests.testWithRevisions": {
                    "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.testLifeCycle": {
                        "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.findsDeletedRevisions",
                        "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.shortCurcuitingWhenOffsetIsToLarge",
                        "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.considersRevisionNumberSortOrder",
                        "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.returnsEmptyRevisionsForUnrevisionedEntity",
                        "org.springframework.data.envers.repository.support.RepositoryIntegrationTests.returnsParticularRevisionForAnEntity",
                    }
                },
            },
            "victims": {
                "org.springframework.data.envers.repository.support.QueryDslRepositoryIntegrationTests.testWithQueryDsl",
                "org.springframework.data.envers.repository.support.QueryDslRepositoryIntegrationTests.testWithRevisions",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/spring-projects/spring-ws.git": {
        "sha": "e8d89c9eb0929dda304174729c9c69fb29f448eb",
        "spring-ws-security": {
            "methods": {
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestUserNotFound",
                "org.springframework.ws.soap.security.xwss.callback.SpringPlainTextPasswordValidationCallbackHandlerTest.testAuthenticateUserPlainTextValid",
                "org.springframework.ws.soap.security.wss4j2.AxiomWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenDigest",
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testCleanUp",
                "org.springframework.ws.soap.security.wss4j2.SaajWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenDigest",
                "org.springframework.ws.soap.security.xwss.callback.SpringPlainTextPasswordValidationCallbackHandlerTest.testAuthenticateUserPlainTextInvalid",
                "org.springframework.ws.soap.security.xwss.callback.SpringUsernamePasswordCallbackHandlerTest.testPasswordCallback",
                "org.springframework.ws.soap.security.xwss.callback.SpringCertificateValidationCallbackHandlerTest.testValidateCertificateInvalid",
                "org.springframework.ws.soap.security.wss4j2.AxiomWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenPlainText",
                "org.springframework.ws.soap.security.wss4j2.SaajWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenPlainText",
                "org.springframework.ws.soap.security.xwss.callback.SpringPlainTextPasswordValidationCallbackHandlerTest.testCleanUp",
                "org.springframework.ws.soap.security.xwss.callback.SpringCertificateValidationCallbackHandlerTest.testValidateCertificateValid",
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestDisabled",
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestValidInvalid",
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestValid",
                "org.springframework.ws.soap.security.wss4j2.callback.SpringSecurityPasswordValidationCallbackHandlerTest.testHandleUsernameTokenPrincipal",
                "org.springframework.ws.soap.security.xwss.callback.SpringUsernamePasswordCallbackHandlerTest.testUsernameCallback",
                "org.springframework.ws.soap.security.xwss.callback.SpringCertificateValidationCallbackHandlerTest.testCleanUp",
            },
            "polluters": {
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestUserNotFound": {
                    "org.springframework.ws.soap.security.wss4j2.callback.SpringSecurityPasswordValidationCallbackHandlerTest.testHandleUsernameTokenPrincipal"
                },
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestValidInvalid": {
                    "org.springframework.ws.soap.security.wss4j2.callback.SpringSecurityPasswordValidationCallbackHandlerTest.testHandleUsernameTokenPrincipal"
                },
            },
            "cleaners": {
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestUserNotFound": {
                    "org.springframework.ws.soap.security.wss4j2.callback.SpringSecurityPasswordValidationCallbackHandlerTest.testHandleUsernameTokenPrincipal": {
                        "org.springframework.ws.soap.security.xwss.callback.SpringPlainTextPasswordValidationCallbackHandlerTest.testAuthenticateUserPlainTextValid",
                        "org.springframework.ws.soap.security.wss4j2.AxiomWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenDigest",
                        "org.springframework.ws.soap.security.xwss.callback.SpringCertificateValidationCallbackHandlerTest.testCleanUp",
                        "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testCleanUp",
                        "org.springframework.ws.soap.security.wss4j2.SaajWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenDigest",
                        "org.springframework.ws.soap.security.xwss.callback.SpringPlainTextPasswordValidationCallbackHandlerTest.testAuthenticateUserPlainTextInvalid",
                        "org.springframework.ws.soap.security.xwss.callback.SpringUsernamePasswordCallbackHandlerTest.testPasswordCallback",
                        "org.springframework.ws.soap.security.xwss.callback.SpringCertificateValidationCallbackHandlerTest.testValidateCertificateInvalid",
                        "org.springframework.ws.soap.security.wss4j2.AxiomWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenPlainText",
                        "org.springframework.ws.soap.security.wss4j2.SaajWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenPlainText",
                        "org.springframework.ws.soap.security.xwss.callback.SpringPlainTextPasswordValidationCallbackHandlerTest.testCleanUp",
                        "org.springframework.ws.soap.security.xwss.callback.SpringCertificateValidationCallbackHandlerTest.testValidateCertificateValid",
                        "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestValidInvalid",
                        "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestValid",
                        "org.springframework.ws.soap.security.xwss.callback.SpringUsernamePasswordCallbackHandlerTest.testUsernameCallback",
                        "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestDisabled",
                    }
                },
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestValidInvalid": {
                    "org.springframework.ws.soap.security.wss4j2.callback.SpringSecurityPasswordValidationCallbackHandlerTest.testHandleUsernameTokenPrincipal": {
                        "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestUserNotFound",
                        "org.springframework.ws.soap.security.xwss.callback.SpringPlainTextPasswordValidationCallbackHandlerTest.testAuthenticateUserPlainTextValid",
                        "org.springframework.ws.soap.security.xwss.callback.SpringCertificateValidationCallbackHandlerTest.testCleanUp",
                        "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testCleanUp",
                        "org.springframework.ws.soap.security.wss4j2.SaajWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenDigest",
                        "org.springframework.ws.soap.security.xwss.callback.SpringPlainTextPasswordValidationCallbackHandlerTest.testAuthenticateUserPlainTextInvalid",
                        "org.springframework.ws.soap.security.xwss.callback.SpringUsernamePasswordCallbackHandlerTest.testPasswordCallback",
                        "org.springframework.ws.soap.security.xwss.callback.SpringCertificateValidationCallbackHandlerTest.testValidateCertificateInvalid",
                        "org.springframework.ws.soap.security.wss4j2.AxiomWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenPlainText",
                        "org.springframework.ws.soap.security.wss4j2.SaajWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenPlainText",
                        "org.springframework.ws.soap.security.xwss.callback.SpringPlainTextPasswordValidationCallbackHandlerTest.testCleanUp",
                        "org.springframework.ws.soap.security.xwss.callback.SpringCertificateValidationCallbackHandlerTest.testValidateCertificateValid",
                        "org.springframework.ws.soap.security.wss4j2.AxiomWss4jMessageInterceptorSpringSecurityCallbackHandlerTest.testValidateUsernameTokenDigest",
                        "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestValid",
                        "org.springframework.ws.soap.security.xwss.callback.SpringUsernamePasswordCallbackHandlerTest.testUsernameCallback",
                        "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestDisabled",
                    }
                },
            },
            "victims": {
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestUserNotFound",
                "org.springframework.ws.soap.security.xwss.callback.SpringDigestPasswordValidationCallbackHandlerTest.testAuthenticateUserDigestValidInvalid",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/tools4j/unix4j.git": {
        "sha": "367da7d262e682a08577cdf19ebbbdd8a46870fe",
        "unix4j-core/unix4j-command": {
            "methods": {
                "org.unix4j.unix.FindFileTimeDependentTest.find_fileCreatedBeforeNow",
                "org.unix4j.unix.FindFileTimeDependentTest.find_fileCreatedAfterTime",
            },
            "polluters": {
                "org.unix4j.unix.FindFileTimeDependentTest.find_fileCreatedBeforeNow": {
                    "org.unix4j.unix.FindFileTimeDependentTest.find_fileCreatedAfterTime"
                }
            },
            "cleaners": {},
            "victims": {
                "org.unix4j.unix.FindFileTimeDependentTest.find_fileCreatedBeforeNow"
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/wikidata/wikidata-toolkit.git": {
        "sha": "20de6f7f12319f54eb962ff6e8357b3f5695d54d",
        "wdtk-dumpfiles": {
            "methods": {
                "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllFullDumps",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.validCurrentDumpPropertiesOldFormat",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.directoryNotReadable",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.missingDumpFile",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoMd5sum",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.downloadNoDumpFile",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllDailyDumpsOffline",
                "org.wikidata.wdtk.dumpfiles.JsonDumpFileProcessingTest.testRegularJsonProcessing",
                "org.wikidata.wdtk.dumpfiles.JsonDumpFileProcessingTest.testBuggyJsonProcessing",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllCurrentDumps",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.downloadNoRevisionId",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.validCurrentDumpPropertiesNewFormat",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.emptyDumpProperties",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.validDumpProperties",
                "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwDailyDumpFileProcessing",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllRelevantDumps",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllJsonDumps",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoDumpFile",
                "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwRecentCurrentDumpFileProcessing",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllRelevantDumpsMainDumpMissing",
                "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwMostRecentFullDumpFileProcessing",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.directoryDoesNotExist",
                "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwRecentFullDumpFileProcessing",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.inaccessibleStatus",
                "org.wikidata.wdtk.dumpfiles.JsonDumpFileProcessingTest.testNonTimeout",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.missingDumpProperties",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.inaccessibleCurrentDumpProperties",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoRevisionId",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllDailyDumps",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllFullDumpsOffline",
                "org.wikidata.wdtk.dumpfiles.SitesTest.getSiteInformation",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.emptyFullDumpIsDone",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.processAllRelevantDumps",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllCurrentDumpsOffline",
                "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.missingFullDumpProperties",
            },
            "polluters": {},
            "cleaners": {},
            "victims": set(),
            "brittles": {
                "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwRecentCurrentDumpFileProcessing",
                "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwDailyDumpFileProcessing",
                "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwMostRecentFullDumpFileProcessing",
            },
            "statesetters": {
                "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwDailyDumpFileProcessing": {
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllFullDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.validCurrentDumpPropertiesOldFormat",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.directoryNotReadable",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.missingDumpFile",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoMd5sum",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.downloadNoDumpFile",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllDailyDumpsOffline",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllCurrentDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.downloadNoRevisionId",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.validCurrentDumpPropertiesNewFormat",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.emptyDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.validDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllRelevantDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllJsonDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoDumpFile",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllRelevantDumpsMainDumpMissing",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.directoryDoesNotExist",
                    "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwRecentFullDumpFileProcessing",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.inaccessibleStatus",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.missingDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.inaccessibleCurrentDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoRevisionId",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllDailyDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllFullDumpsOffline",
                    "org.wikidata.wdtk.dumpfiles.SitesTest.getSiteInformation",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.emptyFullDumpIsDone",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.processAllRelevantDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllCurrentDumpsOffline",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.missingFullDumpProperties",
                },
                "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwMostRecentFullDumpFileProcessing": {
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllFullDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.validCurrentDumpPropertiesOldFormat",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.directoryNotReadable",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.missingDumpFile",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoMd5sum",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.downloadNoDumpFile",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllDailyDumpsOffline",
                    "org.wikidata.wdtk.dumpfiles.JsonDumpFileProcessingTest.testRegularJsonProcessing",
                    "org.wikidata.wdtk.dumpfiles.JsonDumpFileProcessingTest.testBuggyJsonProcessing",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllCurrentDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.downloadNoRevisionId",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.validCurrentDumpPropertiesNewFormat",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.emptyDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.validDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllRelevantDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllJsonDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoDumpFile",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllRelevantDumpsMainDumpMissing",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.directoryDoesNotExist",
                    "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwRecentFullDumpFileProcessing",
                    "org.wikidata.wdtk.dumpfiles.JsonDumpFileProcessingTest.testNonTimeout",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.inaccessibleStatus",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.missingDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.inaccessibleCurrentDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoRevisionId",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllDailyDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllFullDumpsOffline",
                    "org.wikidata.wdtk.dumpfiles.SitesTest.getSiteInformation",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.emptyFullDumpIsDone",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.processAllRelevantDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllCurrentDumpsOffline",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.missingFullDumpProperties",
                },
                "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwRecentCurrentDumpFileProcessing": {
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllFullDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.validCurrentDumpPropertiesOldFormat",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.directoryNotReadable",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.missingDumpFile",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoMd5sum",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.downloadNoDumpFile",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllDailyDumpsOffline",
                    "org.wikidata.wdtk.dumpfiles.JsonDumpFileProcessingTest.testRegularJsonProcessing",
                    "org.wikidata.wdtk.dumpfiles.JsonDumpFileProcessingTest.testBuggyJsonProcessing",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllCurrentDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.downloadNoRevisionId",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.validCurrentDumpPropertiesNewFormat",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.emptyDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.validDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllRelevantDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoDumpFile",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllRelevantDumpsMainDumpMissing",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfLocalDumpFileTest.directoryDoesNotExist",
                    "org.wikidata.wdtk.dumpfiles.MwDumpFileProcessingTest.testMwRecentFullDumpFileProcessing",
                    "org.wikidata.wdtk.dumpfiles.JsonDumpFileProcessingTest.testNonTimeout",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.inaccessibleStatus",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineDailyDumpFileTest.missingDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.inaccessibleCurrentDumpProperties",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.downloadNoRevisionId",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllDailyDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllFullDumpsOffline",
                    "org.wikidata.wdtk.dumpfiles.SitesTest.getSiteInformation",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.emptyFullDumpIsDone",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.processAllRelevantDumps",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfDumpFileManagerTest.getAllCurrentDumpsOffline",
                    "org.wikidata.wdtk.dumpfiles.wmf.WmfOnlineStandardDumpFileTest.missingFullDumpProperties",
                },
            },
        },
        "wdtk-util": {
            "methods": {
                "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerIoException",
                "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerNoConstructor",
                "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDefaultDirectoryManagerPath",
                "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerString",
            },
            "polluters": {
                "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDefaultDirectoryManagerPath": {
                    "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerNoConstructor"
                },
                "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerIoException": {
                    "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerNoConstructor"
                },
            },
            "cleaners": {
                "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDefaultDirectoryManagerPath": {
                    "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerNoConstructor": {
                        "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerString"
                    }
                },
                "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerIoException": {
                    "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerNoConstructor": {
                        "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerString"
                    }
                },
            },
            "victims": {
                "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDirectoryManagerIoException",
                "org.wikidata.wdtk.util.DirectoryManagerFactoryTest.createDefaultDirectoryManagerPath",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
    "https://github.com/zalando/riptide.git": {
        "sha": "8277e11fc069d8e24df0d233ef2577cc75659b75",
        "riptide-spring-boot-starter": {
            "methods": {
                "org.zalando.riptide.spring.metrics.MetricsTest.shouldRecordRequests",
                "org.zalando.riptide.spring.metrics.MetricsTest.shouldRecordCircuitBreakers",
                "org.zalando.riptide.spring.metrics.MetricsTest.shouldRecordRetries",
            },
            "polluters": {
                "org.zalando.riptide.spring.metrics.MetricsTest.shouldRecordRequests": {
                    "org.zalando.riptide.spring.metrics.MetricsTest.shouldRecordCircuitBreakers",
                    "org.zalando.riptide.spring.metrics.MetricsTest.shouldRecordRetries",
                },
                "org.zalando.riptide.spring.metrics.MetricsTest.shouldRecordRetries": {
                    "org.zalando.riptide.spring.metrics.MetricsTest.shouldRecordCircuitBreakers"
                },
            },
            "cleaners": {},
            "victims": {
                "org.zalando.riptide.spring.metrics.MetricsTest.shouldRecordRequests",
                "org.zalando.riptide.spring.metrics.MetricsTest.shouldRecordRetries",
            },
            "brittles": set(),
            "statesetters": {},
        },
    },
}
